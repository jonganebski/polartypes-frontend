[{"/home/jonganebski/github/polartypes-frontend/src/index.tsx":"1","/home/jonganebski/github/polartypes-frontend/src/reportWebVitals.ts":"2","/home/jonganebski/github/polartypes-frontend/src/components/App.tsx":"3","/home/jonganebski/github/polartypes-frontend/src/router/router.tsx":"4","/home/jonganebski/github/polartypes-frontend/src/pages/Home.tsx":"5","/home/jonganebski/github/polartypes-frontend/src/components/Form-error.tsx":"6","/home/jonganebski/github/polartypes-frontend/src/components/Button.tsx":"7","/home/jonganebski/github/polartypes-frontend/src/apollo.ts":"8","/home/jonganebski/github/polartypes-frontend/src/constants.ts":"9","/home/jonganebski/github/polartypes-frontend/src/components/Loading-spinner.tsx":"10","/home/jonganebski/github/polartypes-frontend/src/pages/Trips.tsx":"11","/home/jonganebski/github/polartypes-frontend/src/components/Logo.tsx":"12","/home/jonganebski/github/polartypes-frontend/src/components/Avatar.tsx":"13","/home/jonganebski/github/polartypes-frontend/src/hooks/useGeocoder.ts":"14","/home/jonganebski/github/polartypes-frontend/src/pages/Trip.tsx":"15","/home/jonganebski/github/polartypes-frontend/src/components/Button-add-step.tsx":"16","/home/jonganebski/github/polartypes-frontend/src/helpers.ts":"17","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Signin.tsx":"18","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Signup.tsx":"19","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Set-time-zone.tsx":"20","/home/jonganebski/github/polartypes-frontend/src/components/Cards/Trip.tsx":"21","/home/jonganebski/github/polartypes-frontend/src/components/Cards/Step.tsx":"22","/home/jonganebski/github/polartypes-frontend/src/components/Headers/HomeHeader.tsx":"23","/home/jonganebski/github/polartypes-frontend/src/components/Headers/CommonHeader.tsx":"24","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Background.tsx":"25","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/CloseIcon.tsx":"26","/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Calendar.tsx":"27","/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Clock.tsx":"28","/home/jonganebski/github/polartypes-frontend/src/components/Cards/partials/Comments.tsx":"29","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/FilesArea.tsx":"30","/home/jonganebski/github/polartypes-frontend/src/hooks/useDragNDrop-file.ts":"31","/home/jonganebski/github/polartypes-frontend/src/hooks/useDragNDrop-image.ts":"32","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Save-step.tsx":"33","/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/partials/Day.tsx":"34","/home/jonganebski/github/polartypes-frontend/src/components/Cards/partials/Comment.tsx":"35","/home/jonganebski/github/polartypes-frontend/src/components/Map/Map.tsx":"36","/home/jonganebski/github/polartypes-frontend/src/context.tsx":"37","/home/jonganebski/github/polartypes-frontend/src/__generated__/globalTypes.ts":"38","/home/jonganebski/github/polartypes-frontend/src/components/Trip-status.tsx":"39","/home/jonganebski/github/polartypes-frontend/src/components/Options.tsx":"40","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Settings.tsx":"41","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Profile.tsx":"42","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Account.tsx":"43","/home/jonganebski/github/polartypes-frontend/src/fragments.ts":"44","/home/jonganebski/github/polartypes-frontend/src/hooks/useCalendar.ts":"45","/home/jonganebski/github/polartypes-frontend/src/components/Modals/StepImages.tsx":"46","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateTrip.tsx":"47","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useFollow.tsx":"48","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUnfollow.tsx":"49","/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useTrips.tsx":"50","/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useWhoAmI.tsx":"51","/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useTrip.tsx":"52","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useCreateStep.tsx":"53","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useDeleteStep.tsx":"54","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateStep.tsx":"55","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateAccount.tsx":"56","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Save-trip.tsx":"57","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useDeleteTrip.tsx":"58","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useToggleLike.tsx":"59"},{"size":897,"mtime":1609724630670,"results":"60","hashOfConfig":"61"},{"size":425,"mtime":1608450751420,"results":"62","hashOfConfig":"61"},{"size":132,"mtime":1608710051560,"results":"63","hashOfConfig":"61"},{"size":1154,"mtime":1609726318820,"results":"64","hashOfConfig":"61"},{"size":2774,"mtime":1609726780010,"results":"65","hashOfConfig":"61"},{"size":195,"mtime":1608536237160,"results":"66","hashOfConfig":"61"},{"size":2139,"mtime":1609334355160,"results":"67","hashOfConfig":"61"},{"size":970,"mtime":1609050512200,"results":"68","hashOfConfig":"61"},{"size":526,"mtime":1609234115020,"results":"69","hashOfConfig":"61"},{"size":480,"mtime":1608870180250,"results":"70","hashOfConfig":"61"},{"size":8759,"mtime":1609763404920,"results":"71","hashOfConfig":"61"},{"size":1288,"mtime":1609675763970,"results":"72","hashOfConfig":"61"},{"size":360,"mtime":1609140998700,"results":"73","hashOfConfig":"61"},{"size":1197,"mtime":1608773922930,"results":"74","hashOfConfig":"61"},{"size":14005,"mtime":1609763386930,"results":"75","hashOfConfig":"61"},{"size":1023,"mtime":1609251094630,"results":"76","hashOfConfig":"61"},{"size":2286,"mtime":1609673256740,"results":"77","hashOfConfig":"61"},{"size":4174,"mtime":1609727135170,"results":"78","hashOfConfig":"61"},{"size":5076,"mtime":1609727138200,"results":"79","hashOfConfig":"61"},{"size":4164,"mtime":1609677002090,"results":"80","hashOfConfig":"61"},{"size":2879,"mtime":1609673306020,"results":"81","hashOfConfig":"61"},{"size":5825,"mtime":1609722157980,"results":"82","hashOfConfig":"61"},{"size":1186,"mtime":1608808312077,"results":"83","hashOfConfig":"61"},{"size":3286,"mtime":1609726878290,"results":"84","hashOfConfig":"61"},{"size":346,"mtime":1608808547467,"results":"85","hashOfConfig":"61"},{"size":591,"mtime":1608808437185,"results":"86","hashOfConfig":"61"},{"size":4893,"mtime":1609671400130,"results":"87","hashOfConfig":"61"},{"size":2888,"mtime":1609645106620,"results":"88","hashOfConfig":"61"},{"size":3902,"mtime":1609721013260,"results":"89","hashOfConfig":"61"},{"size":5526,"mtime":1609112071790,"results":"90","hashOfConfig":"61"},{"size":3944,"mtime":1609112067730,"results":"91","hashOfConfig":"61"},{"size":1692,"mtime":1609112069650,"results":"92","hashOfConfig":"61"},{"size":19425,"mtime":1609721139570,"results":"93","hashOfConfig":"61"},{"size":626,"mtime":1609676019110,"results":"94","hashOfConfig":"61"},{"size":2453,"mtime":1609721019600,"results":"95","hashOfConfig":"61"},{"size":7092,"mtime":1609771527110,"results":"96","hashOfConfig":"61"},{"size":1637,"mtime":1609326399230,"results":"97","hashOfConfig":"61"},{"size":4207,"mtime":1609662601810,"results":"98","hashOfConfig":"61"},{"size":2205,"mtime":1609677184500,"results":"99","hashOfConfig":"61"},{"size":3990,"mtime":1609721970680,"results":"100","hashOfConfig":"61"},{"size":5878,"mtime":1609721047830,"results":"101","hashOfConfig":"61"},{"size":4669,"mtime":1609677481170,"results":"102","hashOfConfig":"61"},{"size":5893,"mtime":1609721096480,"results":"103","hashOfConfig":"61"},{"size":1475,"mtime":1609653803860,"results":"104","hashOfConfig":"61"},{"size":3305,"mtime":1609670887020,"results":"105","hashOfConfig":"61"},{"size":2849,"mtime":1609671672420,"results":"106","hashOfConfig":"61"},{"size":1348,"mtime":1609662292010,"results":"107","hashOfConfig":"61"},{"size":1689,"mtime":1609721243510,"results":"108","hashOfConfig":"61"},{"size":1720,"mtime":1609721252150,"results":"109","hashOfConfig":"61"},{"size":769,"mtime":1609722638870,"results":"110","hashOfConfig":"61"},{"size":580,"mtime":1609722642780,"results":"111","hashOfConfig":"61"},{"size":990,"mtime":1609722635090,"results":"112","hashOfConfig":"61"},{"size":2883,"mtime":1609720558970,"results":"113","hashOfConfig":"61"},{"size":1399,"mtime":1609721229130,"results":"114","hashOfConfig":"61"},{"size":1799,"mtime":1609662083140,"results":"115","hashOfConfig":"61"},{"size":2292,"mtime":1609721256750,"results":"116","hashOfConfig":"61"},{"size":15542,"mtime":1609678501180,"results":"117","hashOfConfig":"61"},{"size":1107,"mtime":1609721237790,"results":"118","hashOfConfig":"61"},{"size":2091,"mtime":1609721247770,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"wm2czq",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"122"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"122"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"/home/jonganebski/github/polartypes-frontend/src/index.tsx",[],["241","242"],"/home/jonganebski/github/polartypes-frontend/src/reportWebVitals.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/App.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/router/router.tsx",["243"],"import { useReactiveVar } from '@apollo/client';\nimport React, { useEffect } from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport { isLoggedInVar } from '../apollo';\nimport { ModalBackground } from '../components/Modals/partials/Background';\nimport { useWhoAmI } from '../hooks/useQuery/useWhoAmI';\nimport { Home } from '../pages/Home';\nimport { Trip } from '../pages/Trip';\nimport { Trips } from '../pages/Trips';\n\nexport const Router = () => {\n  const isLoggedIn = useReactiveVar(isLoggedInVar);\n  const [lazyWhoAmIQuery, { data: userData }] = useWhoAmI();\n  useEffect(() => {\n    lazyWhoAmIQuery();\n  }, [lazyWhoAmIQuery]);\n  return (\n    <BrowserRouter>\n      <Switch>\n        {isLoggedIn && userData && (\n          <Redirect from=\"/\" to={`/${userData.whoAmI.username}`} exact />\n        )}\n        {!isLoggedIn && (\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n        )}\n        <Route path=\"/:username\" exact>\n          <Trips />\n        </Route>\n        <Route path=\"/:username/:tripId\" exact>\n          <Trip />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n","/home/jonganebski/github/polartypes-frontend/src/pages/Home.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Form-error.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Button.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/apollo.ts",[],"/home/jonganebski/github/polartypes-frontend/src/constants.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/Loading-spinner.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/pages/Trips.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Logo.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Avatar.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useGeocoder.ts",[],"/home/jonganebski/github/polartypes-frontend/src/pages/Trip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Button-add-step.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/helpers.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Signin.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Signup.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Set-time-zone.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Cards/Trip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Cards/Step.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Headers/HomeHeader.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Headers/CommonHeader.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Background.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/CloseIcon.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Calendar.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Clock.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Cards/partials/Comments.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/FilesArea.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useDragNDrop-file.ts",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useDragNDrop-image.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Save-step.tsx",["244"],"import {\n  faCalendar,\n  faClock,\n  faTrashAlt,\n} from '@fortawesome/free-regular-svg-icons';\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport moment from 'moment';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { deleteFiles, getTimeZone } from '../../helpers';\nimport { useCreateStep } from '../../hooks/useMutation/useCreateStep';\nimport { useDeleteStep } from '../../hooks/useMutation/useDeleteStep';\nimport { useGeocoder } from '../../hooks/useGeocoder';\nimport { useUpdateStep } from '../../hooks/useMutation/useUpdateStep';\nimport { readTripQuery_readTrip_trip_steps } from '../../__generated__/readTripQuery';\nimport { Button } from '../Button';\nimport { Clock } from '../Tooltips/Clock';\nimport { NewCalendar } from '../Tooltips/Calendar';\nimport { ModalCloseIcon } from './partials/CloseIcon';\nimport { FilesArea } from './partials/FilesArea';\nimport { ICreateStepFormProps } from '../../pages/Trip';\n\ninterface ISaveStepModalProps {\n  tripId: string;\n  tripStartDate: string;\n  tripEndDate: string | null;\n  belowStepDate: string;\n  setIsSaveStepModal: React.Dispatch<React.SetStateAction<boolean>>;\n  editingStep: readTripQuery_readTrip_trip_steps | null;\n}\n\nexport type TImage = { id?: string; src?: string; url?: string };\n\nexport const SaveStepModal: React.FC<ISaveStepModalProps> = ({\n  tripId,\n  tripStartDate,\n  tripEndDate,\n  belowStepDate,\n  setIsSaveStepModal,\n  editingStep,\n}) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n  const [isLocationBlock, setIsLocationBlock] = useState(false);\n  const [uploadErr, setUploadErr] = useState('');\n  const [isPopupCalendar, setIsPopupCalendar] = useState<boolean | null>(null);\n  const [images, setImages] = useState<TImage[]>(\n    editingStep?.imgUrls?.map((url) => ({ url })) ?? [],\n  );\n  const [imagesRecord, setImagesRecord] = useState<TImage[]>(images);\n  const f = useFormContext<ICreateStepFormProps>();\n  const { setValue, getValues, handleSubmit, register, watch, formState } = f;\n  const [\n    createStepMutation,\n    { loading: createStepMutationLoading },\n  ] = useCreateStep(f, tripId, images, setIsSaveStepModal);\n\n  const [\n    updateStepMutation,\n    { loading: updateStepMutaionLoading },\n  ] = useUpdateStep(f, editingStep, images, setIsSaveStepModal);\n\n  const [\n    deleteStepMutation,\n    { loading: deleteStepMutaionLoading },\n  ] = useDeleteStep(f, tripId, images, setIsSaveStepModal);\n\n  const { geocodeData, setGeocodeData } = useGeocoder(searchTerm);\n\n  const onLocationChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.currentTarget.value);\n  };\n\n  const cleanupUnusedImageFilesOnCancel = useCallback(() => {\n    if (imagesRecord.length === 0 || !imagesRecord.some((image) => image.url)) {\n      return;\n    }\n    const urls: string[] = [];\n    if (editingStep) {\n      imagesRecord.forEach((image) => {\n        if (!image.url) {\n          return;\n        }\n        const isUsedImage = editingStep.imgUrls?.some(\n          (url) => url === image.url,\n        );\n        if (!isUsedImage) {\n          urls.push(image.url);\n        }\n      });\n    } else {\n      imagesRecord.forEach((image) => image.url && urls.push(image.url));\n    }\n    urls.length !== 0 && deleteFiles(urls);\n  }, [editingStep, imagesRecord]);\n\n  const cleanupUnusedImageFilesOnEditSubmit = () => {\n    if (imagesRecord.length === 0 || !imagesRecord.some((image) => image.url)) {\n      return;\n    }\n    const urls: string[] = [];\n    imagesRecord.forEach((image) => {\n      if (!image.url) {\n        return;\n      }\n      const isUsedImage = images.some((img) => img.url === image.url);\n      if (!isUsedImage) {\n        urls.push(image.url);\n      }\n    });\n    urls.length !== 0 && deleteFiles(urls);\n  };\n\n  const onSubmit = () => {\n    const { lat, lon, ...values } = getValues();\n    const imgUrls = images.reduce((acc, img) => {\n      if (img.url) {\n        return [...acc, img.url];\n      } else {\n        return acc;\n      }\n    }, [] as string[]);\n    if (editingStep) {\n      cleanupUnusedImageFilesOnEditSubmit();\n      updateStepMutation({\n        variables: {\n          input: {\n            ...values,\n            stepId: editingStep.id,\n            lat: +lat,\n            lon: +lon,\n            imgUrls,\n          },\n        },\n      });\n    } else {\n      createStepMutation({\n        variables: {\n          input: {\n            ...values,\n            tripId: +tripId,\n            lat: +lat,\n            lon: +lon,\n            imgUrls,\n          },\n        },\n      });\n    }\n  };\n\n  const onModalClose = useCallback(() => {\n    if (isUploading) {\n      return;\n    }\n    cleanupUnusedImageFilesOnCancel();\n    setIsSaveStepModal(false);\n  }, [cleanupUnusedImageFilesOnCancel, isUploading, setIsSaveStepModal]);\n\n  useEffect(() => {\n    window.addEventListener('beforeunload', cleanupUnusedImageFilesOnCancel);\n    return () =>\n      window.removeEventListener(\n        'beforeunload',\n        cleanupUnusedImageFilesOnCancel,\n      );\n  }, [cleanupUnusedImageFilesOnCancel]);\n\n  useEffect(() => {\n    if (editingStep) {\n      setValue('arrivedAt', editingStep.arrivedAt, { shouldValidate: true });\n      setValue('country', editingStep.country, { shouldValidate: true });\n      setValue('lat', editingStep.lat.toString(), { shouldValidate: true });\n      setValue('lon', editingStep.lon.toString(), { shouldValidate: true });\n      setValue('location', editingStep.location, { shouldValidate: true });\n      setValue('name', editingStep.name, { shouldValidate: true });\n      setValue('story', editingStep.story ?? '', { shouldValidate: true });\n      setValue('timeZone', editingStep.timeZone, { shouldValidate: true });\n    } else {\n      setValue('arrivedAt', belowStepDate, { shouldValidate: true });\n    }\n  }, [belowStepDate, editingStep, setValue]);\n  return (\n    <>\n      <div className=\"absolute z-50 top-0 left-0 w-full h-full bg-myGreen-darkest bg-opacity-80\"></div>\n      <div className=\"absolute z-50 top-0 left-0 w-full h-screenExceptHeader overflow-y-scroll\">\n        <div className=\"absolute top-2 left-1/2 transform -translate-x-1/2 w-11/12 bg-white rounded-2xl\">\n          <ModalCloseIcon onClick={onModalClose} />\n          <div className=\"py-6 text-center text-2xl text-myGreen-darkest font-semibold border-b\">\n            {editingStep ? 'Edit step' : 'New Trip'}\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)} className=\"p-6\">\n            <section className=\"relative p-6 mb-4 grid grid-cols-oneToTwo bg-myGray-dark rounded-2xl\">\n              <div>\n                <h3 className=\"text-white font-semibold\">Location</h3>\n                <span className=\"block text-sm font-medium text-myGray-light\">\n                  Search\n                </span>\n                <span className=\"text-sm font-medium text-myGray-light\">\n                  or click the map\n                </span>\n              </div>\n              <div className=\"rounded-sm\">\n                <div className=\"relative\">\n                  <input\n                    onChange={onLocationChange}\n                    ref={register({ required: true })}\n                    name=\"location\"\n                    placeholder=\"Enter a location\"\n                    autoComplete=\"off\"\n                    className=\"input w-full border-transparent rounded-b-none\"\n                  />\n                  <div className=\"absolute z-10 w-full flex flex-col bg-white\">\n                    {geocodeData?.map((d: any, i: number) => {\n                      return (\n                        <div\n                          key={i}\n                          onClick={async () => {\n                            const lat = (+d.point?.lat)?.toFixed(6);\n                            const lon = (+d.point?.lng)?.toFixed(6);\n                            setValue('location', d.name, {\n                              shouldValidate: true,\n                            });\n                            setValue('lat', lat, { shouldValidate: true });\n                            setValue('lon', lon, { shouldValidate: true });\n                            setValue('country', d.country, {\n                              shouldValidate: true,\n                            });\n                            setGeocodeData(null);\n                          }}\n                          className=\"px-4 py-2 cursor-pointer text-sm hover:bg-myGray-lightest\"\n                        >\n                          <span className=\"mr-2\">{d.name}</span>\n                          <span className=\"text-myGray\">{d.country}</span>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n                <div className=\"p-2 pl-4 flex bg-white text-myGray-darkest text-sm\">\n                  <div className=\"flex items-center border-r border-myGray-light\">\n                    <span className=\"font-semibold\">Lat:</span>\n                    <input\n                      ref={register({ required: true })}\n                      name=\"lat\"\n                      placeholder=\"00,000000\"\n                      className=\"ml-1 w-full focus:outline-none\"\n                    />\n                  </div>\n                  <div className=\"pl-4 flex items-center\">\n                    <span className=\"font-semibold\">Lon:</span>\n                    <input\n                      ref={register({ required: true })}\n                      name=\"lon\"\n                      placeholder=\"00,000000\"\n                      className=\"ml-1 w-full focus:outline-none\"\n                    />\n                  </div>\n                  <div\n                    onClick={async () => {\n                      const { location, lat, lon } = getValues();\n                      if (location && lat && lon) {\n                        const { ok, error, timeZone } = await getTimeZone(\n                          lat,\n                          lon,\n                        );\n                        if (ok && !error && timeZone) {\n                          setValue('timeZone', timeZone);\n                        }\n                        setIsLocationBlock(true);\n                      }\n                    }}\n                    className=\"py-1.5 px-4 rounded-full bg-myBlue text-white cursor-pointer\"\n                  >\n                    Set\n                  </div>\n                </div>\n              </div>\n              {isLocationBlock && (\n                <div\n                  onClick={() => {\n                    setIsLocationBlock((prev) => !prev);\n                  }}\n                  className=\"absolute top-0 left-0 w-full h-full p-3 rounded-2xl text-sm bg-white bg-opacity-80 cursor-pointer group hover:bg-myBlue hover:bg-opacity-80\"\n                >\n                  <div className=\"text-transparent group-hover:text-white\">\n                    <FontAwesomeIcon icon={faPencilAlt} className=\"mr-2\" />\n                    <span>Edit info</span>\n                  </div>\n                </div>\n              )}\n            </section>\n            <section className=\"relative p-6 mb-6 grid grid-cols-oneToTwo gap-y-4 rounded-2xl shadow-surround\">\n              <h3 className=\"flex items-center text-myGreen-darkest font-semibold\">\n                Step name\n              </h3>\n              <div className=\"flex\">\n                <input\n                  ref={register({ required: true })}\n                  name=\"name\"\n                  placeholder=\"-\"\n                  className=\"input w-full rounded-r-none\"\n                />\n                <input\n                  ref={register({ required: true })}\n                  name=\"country\"\n                  readOnly\n                  style={{\n                    width: watch('country')?.length + 2 + 'ch',\n                  }}\n                  className=\"px-2 py-3 w-0 text-myGray-dark border border-l-0 border-myGray bg-myGray-light rounded-r-md rounded-l-none focus:outline-none\"\n                />\n              </div>\n              <h3 className=\"flex items-center text-myGreen-darkest font-semibold\">\n                Arrival Date & Time\n              </h3>\n              <div className=\"flex\">\n                <input\n                  ref={register({ required: true })}\n                  name=\"arrivedAt\"\n                  className=\"hidden\"\n                  readOnly\n                />\n                <div\n                  className={`relative mr-3 w-full border border-solid rounded-sm cursor-pointer focus:outline-none ${\n                    isPopupCalendar ? 'border-myBlue' : 'border-myGray'\n                  }`}\n                >\n                  <div\n                    className=\"px-4 py-3 flex items-center justify-between\"\n                    onClick={() =>\n                      setIsPopupCalendar((prev) => (prev ? null : true))\n                    }\n                  >\n                    <span>\n                      {getValues().arrivedAt && getValues().timeZone\n                        ? moment\n                            .tz(watch('arrivedAt'), watch('timeZone'))\n                            .format('MMM D YYYY')\n                        : ''}\n                    </span>\n                    <FontAwesomeIcon\n                      icon={faCalendar}\n                      className=\"text-myBlue text-xl\"\n                    />\n                  </div>\n                  {isPopupCalendar && getValues('timeZone') && (\n                    <NewCalendar\n                      name=\"arrivedAt\"\n                      timeZone={getValues('timeZone')}\n                      selectedDate={getValues('arrivedAt')}\n                      effectiveSince={tripStartDate}\n                      effectiveUntil={\n                        tripEndDate\n                          ? moment(tripEndDate).add(1, 'days').format()\n                          : null\n                      }\n                    />\n                  )}\n                </div>\n                <div\n                  className={`relative px-4 py-3 border border-solid rounded-sm cursor-pointer ${\n                    isPopupCalendar === false\n                      ? 'border-myBlue'\n                      : 'border-myGray'\n                  }`}\n                >\n                  <div\n                    onClick={() =>\n                      setIsPopupCalendar((prev) =>\n                        prev === false ? null : false,\n                      )\n                    }\n                    className=\"mr-3 w-full flex items-center justify-between whitespace-nowrap\"\n                  >\n                    <span>\n                      {getValues().arrivedAt && getValues().timeZone\n                        ? moment\n                            .tz(watch('arrivedAt'), watch('timeZone'))\n                            .format('HH : mm')\n                        : ''}\n                    </span>\n                    <FontAwesomeIcon\n                      icon={faClock}\n                      className=\"text-myBlue text-xl\"\n                    />\n                  </div>\n                  {isPopupCalendar === false && (\n                    <Clock timeZone={watch('timeZone')} />\n                  )}\n                  <input\n                    ref={register()}\n                    name=\"timeZone\"\n                    readOnly\n                    className=\"hidden\"\n                  />\n                </div>\n              </div>\n              <h3 className=\"mt-3 text-myGreen-darkest font-semibold\">\n                Your story\n              </h3>\n              <textarea\n                ref={register()}\n                name=\"story\"\n                placeholder=\"What have you been up to?\"\n                className=\"resize-none px-4 py-3 h-48 border border-myGray rounded-sm focus:outline-none focus:border-myBlue\"\n              />\n              <h3 className=\"flex flex-col justify-center text-myGreen-darkest font-semibold\">\n                Add your photos\n                <span className=\"text-sm font-medium text-myGray-dark\">\n                  Drag'n drop to re-arrange\n                </span>\n              </h3>\n              <FilesArea\n                images={images}\n                setImages={setImages}\n                setImagesRecord={setImagesRecord}\n                isUploading={isUploading}\n                setIsUploading={setIsUploading}\n                uploadErr={uploadErr}\n                setUploadErr={setUploadErr}\n                editingStep={editingStep}\n              />\n              {!isLocationBlock && (\n                <div\n                  onClick={() => {\n                    const {\n                      location,\n                      lat,\n                      lon,\n                      country,\n                      timeZone,\n                    } = getValues();\n                    if (location && lat && lon && country && timeZone) {\n                      setIsLocationBlock((prev) => !prev);\n                    }\n                  }}\n                  className=\"absolute top-0 left-0 w-full h-full p-3 rounded-2xl text-sm bg-white bg-opacity-80 cursor-pointer group hover:bg-myBlue hover:bg-opacity-80\"\n                >\n                  <div className=\"text-transparent group-hover:text-white\">\n                    <FontAwesomeIcon icon={faPencilAlt} className=\"mr-2\" />\n                    <span>Edit info</span>\n                  </div>\n                </div>\n              )}\n            </section>\n            <div className=\"flex justify-between\">\n              <div>\n                <Button\n                  text={editingStep ? 'Save changes' : 'Add step'}\n                  type=\"red-solid\"\n                  loading={\n                    createStepMutationLoading || updateStepMutaionLoading\n                  }\n                  disabled={\n                    !formState.isValid ||\n                    isUploading ||\n                    createStepMutationLoading ||\n                    updateStepMutaionLoading\n                  }\n                  className=\"mr-4\"\n                />\n                <Button\n                  text=\"Cancel\"\n                  type=\"white-solid\"\n                  isSubmitBtn={false}\n                  disabled={\n                    isUploading ||\n                    createStepMutationLoading ||\n                    updateStepMutaionLoading\n                  }\n                  onClick={onModalClose}\n                />\n              </div>\n              {editingStep && (\n                <Button\n                  text=\"\"\n                  type=\"white-solid\"\n                  icon={\n                    <FontAwesomeIcon icon={faTrashAlt} className=\"text-lg\" />\n                  }\n                  fontColorClass=\"text-myRed\"\n                  isSubmitBtn={false}\n                  disabled={isUploading || updateStepMutaionLoading}\n                  onClick={() => {\n                    const isConfirmed = window.confirm(\n                      'You are deleting this step permanently. Are you sure?',\n                    );\n                    isConfirmed &&\n                      deleteStepMutation({\n                        variables: { input: { stepId: editingStep.id } },\n                      });\n                  }}\n                />\n              )}\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n","/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/partials/Day.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Cards/partials/Comment.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Map/Map.tsx",["245"],"/home/jonganebski/github/polartypes-frontend/src/context.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/__generated__/globalTypes.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/Trip-status.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Options.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Settings.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Profile.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Account.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/fragments.ts",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useCalendar.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/StepImages.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateTrip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useFollow.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUnfollow.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useTrips.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useWhoAmI.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useTrip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useCreateStep.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useDeleteStep.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateStep.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateAccount.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Save-trip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useDeleteTrip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useToggleLike.tsx",[],{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","severity":1,"message":"251","line":5,"column":10,"nodeType":"252","messageId":"253","endLine":5,"endColumn":25},{"ruleId":"250","severity":1,"message":"254","line":66,"column":16,"nodeType":"252","messageId":"253","endLine":66,"endColumn":40},{"ruleId":"250","severity":1,"message":"255","line":1,"column":28,"nodeType":"252","messageId":"253","endLine":1,"endColumn":34},"no-native-reassign",["256"],"no-negated-in-lhs",["257"],"@typescript-eslint/no-unused-vars","'ModalBackground' is defined but never used.","Identifier","unusedVar","'deleteStepMutaionLoading' is assigned a value but never used.","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation"]