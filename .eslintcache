[{"/home/jonganebski/github/polartypes-frontend/src/index.tsx":"1","/home/jonganebski/github/polartypes-frontend/src/reportWebVitals.ts":"2","/home/jonganebski/github/polartypes-frontend/src/components/App.tsx":"3","/home/jonganebski/github/polartypes-frontend/src/router/router.tsx":"4","/home/jonganebski/github/polartypes-frontend/src/pages/Home.tsx":"5","/home/jonganebski/github/polartypes-frontend/src/components/Form-error.tsx":"6","/home/jonganebski/github/polartypes-frontend/src/components/Button.tsx":"7","/home/jonganebski/github/polartypes-frontend/src/apollo.ts":"8","/home/jonganebski/github/polartypes-frontend/src/constants.ts":"9","/home/jonganebski/github/polartypes-frontend/src/components/Loading-spinner.tsx":"10","/home/jonganebski/github/polartypes-frontend/src/pages/Trips.tsx":"11","/home/jonganebski/github/polartypes-frontend/src/components/Logo.tsx":"12","/home/jonganebski/github/polartypes-frontend/src/components/Avatar.tsx":"13","/home/jonganebski/github/polartypes-frontend/src/hooks/useGeocoder.ts":"14","/home/jonganebski/github/polartypes-frontend/src/pages/Trip.tsx":"15","/home/jonganebski/github/polartypes-frontend/src/components/Button-add-step.tsx":"16","/home/jonganebski/github/polartypes-frontend/src/helpers.ts":"17","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Signin.tsx":"18","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Signup.tsx":"19","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Set-time-zone.tsx":"20","/home/jonganebski/github/polartypes-frontend/src/components/Cards/Trip.tsx":"21","/home/jonganebski/github/polartypes-frontend/src/components/Cards/Step.tsx":"22","/home/jonganebski/github/polartypes-frontend/src/components/Headers/HomeHeader.tsx":"23","/home/jonganebski/github/polartypes-frontend/src/components/Headers/CommonHeader.tsx":"24","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Background.tsx":"25","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/CloseIcon.tsx":"26","/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Calendar.tsx":"27","/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Clock.tsx":"28","/home/jonganebski/github/polartypes-frontend/src/components/Cards/partials/Comments.tsx":"29","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/FilesArea.tsx":"30","/home/jonganebski/github/polartypes-frontend/src/hooks/useDragNDrop-file.ts":"31","/home/jonganebski/github/polartypes-frontend/src/hooks/useDragNDrop-image.ts":"32","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Save-step.tsx":"33","/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/partials/Day.tsx":"34","/home/jonganebski/github/polartypes-frontend/src/components/Cards/partials/Comment.tsx":"35","/home/jonganebski/github/polartypes-frontend/src/components/Map/Map.tsx":"36","/home/jonganebski/github/polartypes-frontend/src/components/Map/Partials/Map-event-fns.tsx":"37","/home/jonganebski/github/polartypes-frontend/src/components/Map/Partials/Image-marker.tsx":"38","/home/jonganebski/github/polartypes-frontend/src/components/Map/Partials/Plain-marker.tsx":"39","/home/jonganebski/github/polartypes-frontend/src/context.tsx":"40","/home/jonganebski/github/polartypes-frontend/src/__generated__/globalTypes.ts":"41","/home/jonganebski/github/polartypes-frontend/src/components/Trip-status.tsx":"42","/home/jonganebski/github/polartypes-frontend/src/components/Map/Partials/Dynamic-polylines.tsx":"43","/home/jonganebski/github/polartypes-frontend/src/components/Options.tsx":"44","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Settings.tsx":"45","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Profile.tsx":"46","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Account.tsx":"47","/home/jonganebski/github/polartypes-frontend/src/fragments.ts":"48","/home/jonganebski/github/polartypes-frontend/src/hooks/useCalendar.ts":"49","/home/jonganebski/github/polartypes-frontend/src/components/Modals/StepImages.tsx":"50","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateTrip.tsx":"51","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useFollow.tsx":"52","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUnfollow.tsx":"53","/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useTrips.tsx":"54","/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useWhoAmI.tsx":"55","/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useTrip.tsx":"56","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useCreateStep.tsx":"57","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useDeleteStep.tsx":"58","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateStep.tsx":"59","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateAccount.tsx":"60","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Save-trip.tsx":"61","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useDeleteTrip.tsx":"62","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useToggleLike.tsx":"63"},{"size":791,"mtime":1609326157660,"results":"64","hashOfConfig":"65"},{"size":425,"mtime":1608450751420,"results":"66","hashOfConfig":"65"},{"size":132,"mtime":1608710051560,"results":"67","hashOfConfig":"65"},{"size":976,"mtime":1609661941450,"results":"68","hashOfConfig":"65"},{"size":2657,"mtime":1609645652400,"results":"69","hashOfConfig":"65"},{"size":195,"mtime":1608536237160,"results":"70","hashOfConfig":"65"},{"size":2139,"mtime":1609334355160,"results":"71","hashOfConfig":"65"},{"size":970,"mtime":1609050512200,"results":"72","hashOfConfig":"65"},{"size":526,"mtime":1609234115020,"results":"73","hashOfConfig":"65"},{"size":480,"mtime":1608870180250,"results":"74","hashOfConfig":"65"},{"size":7615,"mtime":1609679888950,"results":"75","hashOfConfig":"65"},{"size":1288,"mtime":1609675763970,"results":"76","hashOfConfig":"65"},{"size":360,"mtime":1609140998700,"results":"77","hashOfConfig":"65"},{"size":1197,"mtime":1608773922930,"results":"78","hashOfConfig":"65"},{"size":12964,"mtime":1609679879140,"results":"79","hashOfConfig":"65"},{"size":1023,"mtime":1609251094630,"results":"80","hashOfConfig":"65"},{"size":2286,"mtime":1609673256740,"results":"81","hashOfConfig":"65"},{"size":4189,"mtime":1608808552000,"results":"82","hashOfConfig":"65"},{"size":5091,"mtime":1609662386440,"results":"83","hashOfConfig":"65"},{"size":4164,"mtime":1609677002090,"results":"84","hashOfConfig":"65"},{"size":2879,"mtime":1609673306020,"results":"85","hashOfConfig":"65"},{"size":5618,"mtime":1609672294180,"results":"86","hashOfConfig":"65"},{"size":1186,"mtime":1608808312077,"results":"87","hashOfConfig":"65"},{"size":2511,"mtime":1609679866470,"results":"88","hashOfConfig":"65"},{"size":346,"mtime":1608808547467,"results":"89","hashOfConfig":"65"},{"size":591,"mtime":1608808437185,"results":"90","hashOfConfig":"65"},{"size":4893,"mtime":1609671400130,"results":"91","hashOfConfig":"65"},{"size":2888,"mtime":1609645106620,"results":"92","hashOfConfig":"65"},{"size":3912,"mtime":1609661956290,"results":"93","hashOfConfig":"65"},{"size":5526,"mtime":1609112071790,"results":"94","hashOfConfig":"65"},{"size":3944,"mtime":1609112067730,"results":"95","hashOfConfig":"65"},{"size":1692,"mtime":1609112069650,"results":"96","hashOfConfig":"65"},{"size":19475,"mtime":1609670986270,"results":"97","hashOfConfig":"65"},{"size":626,"mtime":1609676019110,"results":"98","hashOfConfig":"65"},{"size":2535,"mtime":1609661936280,"results":"99","hashOfConfig":"65"},{"size":5604,"mtime":1609661875630,"results":"100","hashOfConfig":"65"},{"size":1346,"mtime":1609642383600,"results":"101","hashOfConfig":"65"},{"size":2031,"mtime":1609662406480,"results":"102","hashOfConfig":"65"},{"size":1053,"mtime":1609317310630,"results":"103","hashOfConfig":"65"},{"size":1637,"mtime":1609326399230,"results":"104","hashOfConfig":"65"},{"size":4207,"mtime":1609662601810,"results":"105","hashOfConfig":"65"},{"size":2205,"mtime":1609677184500,"results":"106","hashOfConfig":"65"},{"size":1929,"mtime":1609331171920,"results":"107","hashOfConfig":"65"},{"size":3708,"mtime":1609677851170,"results":"108","hashOfConfig":"65"},{"size":5984,"mtime":1609679730230,"results":"109","hashOfConfig":"65"},{"size":4669,"mtime":1609677481170,"results":"110","hashOfConfig":"65"},{"size":6022,"mtime":1609679747070,"results":"111","hashOfConfig":"65"},{"size":1475,"mtime":1609653803860,"results":"112","hashOfConfig":"65"},{"size":3305,"mtime":1609670887020,"results":"113","hashOfConfig":"65"},{"size":2849,"mtime":1609671672420,"results":"114","hashOfConfig":"65"},{"size":1348,"mtime":1609662292010,"results":"115","hashOfConfig":"65"},{"size":1567,"mtime":1609662166440,"results":"116","hashOfConfig":"65"},{"size":1598,"mtime":1609662180080,"results":"117","hashOfConfig":"65"},{"size":793,"mtime":1609661845600,"results":"118","hashOfConfig":"65"},{"size":367,"mtime":1609680143180,"results":"119","hashOfConfig":"65"},{"size":973,"mtime":1609661843110,"results":"120","hashOfConfig":"65"},{"size":2761,"mtime":1609661880280,"results":"121","hashOfConfig":"65"},{"size":1550,"mtime":1609669325140,"results":"122","hashOfConfig":"65"},{"size":1799,"mtime":1609662083140,"results":"123","hashOfConfig":"65"},{"size":2194,"mtime":1609677377120,"results":"124","hashOfConfig":"65"},{"size":15542,"mtime":1609678501180,"results":"125","hashOfConfig":"65"},{"size":1012,"mtime":1609678526410,"results":"126","hashOfConfig":"65"},{"size":1969,"mtime":1609672204680,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"wm2czq",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"130"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"130"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"130"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"130"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"130"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"/home/jonganebski/github/polartypes-frontend/src/index.tsx",[],["261","262"],"/home/jonganebski/github/polartypes-frontend/src/reportWebVitals.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/App.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/router/router.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/pages/Home.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Form-error.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Button.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/apollo.ts",[],"/home/jonganebski/github/polartypes-frontend/src/constants.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/Loading-spinner.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/pages/Trips.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Logo.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Avatar.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useGeocoder.ts",[],"/home/jonganebski/github/polartypes-frontend/src/pages/Trip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Button-add-step.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/helpers.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Signin.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Signup.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Set-time-zone.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Cards/Trip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Cards/Step.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Headers/HomeHeader.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Headers/CommonHeader.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Background.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/CloseIcon.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Calendar.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Clock.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Cards/partials/Comments.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/FilesArea.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useDragNDrop-file.ts",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useDragNDrop-image.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Save-step.tsx",["263"],"import {\n  faCalendar,\n  faClock,\n  faTrashAlt,\n} from '@fortawesome/free-regular-svg-icons';\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport moment from 'moment';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { deleteFiles, getTimeZone } from '../../helpers';\nimport { useCreateStep } from '../../hooks/useMutation/useCreateStep';\nimport { useDeleteStep } from '../../hooks/useMutation/useDeleteStep';\nimport { useGeocoder } from '../../hooks/useGeocoder';\nimport { useUpdateStep } from '../../hooks/useMutation/useUpdateStep';\nimport { readTripQuery_readTrip_trip_steps } from '../../__generated__/readTripQuery';\nimport { Button } from '../Button';\nimport { Clock } from '../Tooltips/Clock';\nimport { NewCalendar } from '../Tooltips/Calendar';\nimport { ModalCloseIcon } from './partials/CloseIcon';\nimport { FilesArea } from './partials/FilesArea';\nimport { ICreateStepFormProps } from '../../pages/Trip';\n\ninterface ISaveStepModalProps {\n  tripId: string;\n  tripStartDate: string;\n  tripEndDate: string | null;\n  belowStepDate: string;\n  belowStepTimeZone: string;\n  setIsSaveStepModal: React.Dispatch<React.SetStateAction<boolean>>;\n  editingStep: readTripQuery_readTrip_trip_steps | null;\n}\n\nexport type TImage = { id?: string; src?: string; url?: string };\n\nexport const SaveStepModal: React.FC<ISaveStepModalProps> = ({\n  tripId,\n  tripStartDate,\n  tripEndDate,\n  belowStepDate,\n  belowStepTimeZone,\n  setIsSaveStepModal,\n  editingStep,\n}) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n  const [isLocationBlock, setIsLocationBlock] = useState(false);\n  const [uploadErr, setUploadErr] = useState('');\n  const [isPopupCalendar, setIsPopupCalendar] = useState<boolean | null>(null);\n  const [images, setImages] = useState<TImage[]>(\n    editingStep?.imgUrls?.map((url) => ({ url })) ?? [],\n  );\n  const [imagesRecord, setImagesRecord] = useState<TImage[]>(images);\n  const f = useFormContext<ICreateStepFormProps>();\n  const { setValue, getValues, handleSubmit, register, watch, formState } = f;\n  const [\n    createStepMutation,\n    { loading: createStepMutationLoading },\n  ] = useCreateStep(f, tripId, images, setIsSaveStepModal);\n\n  const [\n    updateStepMutation,\n    { loading: updateStepMutaionLoading },\n  ] = useUpdateStep(f, editingStep, images, setIsSaveStepModal);\n\n  const [\n    deleteStepMutation,\n    { loading: deleteStepMutaionLoading },\n  ] = useDeleteStep(f, tripId, images, setIsSaveStepModal);\n\n  const { geocodeData, setGeocodeData } = useGeocoder(searchTerm);\n\n  const onLocationChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.currentTarget.value);\n  };\n\n  const cleanupUnusedImageFilesOnCancel = useCallback(() => {\n    if (imagesRecord.length === 0 || !imagesRecord.some((image) => image.url)) {\n      return;\n    }\n    const urls: string[] = [];\n    if (editingStep) {\n      imagesRecord.forEach((image) => {\n        if (!image.url) {\n          return;\n        }\n        const isUsedImage = editingStep.imgUrls?.some(\n          (url) => url === image.url,\n        );\n        if (!isUsedImage) {\n          urls.push(image.url);\n        }\n      });\n    } else {\n      imagesRecord.forEach((image) => image.url && urls.push(image.url));\n    }\n    urls.length !== 0 && deleteFiles(urls);\n  }, [editingStep, imagesRecord]);\n\n  const cleanupUnusedImageFilesOnEditSubmit = () => {\n    if (imagesRecord.length === 0 || !imagesRecord.some((image) => image.url)) {\n      return;\n    }\n    const urls: string[] = [];\n    imagesRecord.forEach((image) => {\n      if (!image.url) {\n        return;\n      }\n      const isUsedImage = images.some((img) => img.url === image.url);\n      if (!isUsedImage) {\n        urls.push(image.url);\n      }\n    });\n    urls.length !== 0 && deleteFiles(urls);\n  };\n\n  const onSubmit = () => {\n    const { lat, lon, ...values } = getValues();\n    const imgUrls = images.reduce((acc, img) => {\n      if (img.url) {\n        return [...acc, img.url];\n      } else {\n        return acc;\n      }\n    }, [] as string[]);\n    if (editingStep) {\n      cleanupUnusedImageFilesOnEditSubmit();\n      updateStepMutation({\n        variables: {\n          input: {\n            ...values,\n            stepId: editingStep.id,\n            lat: +lat,\n            lon: +lon,\n            imgUrls,\n          },\n        },\n      });\n    } else {\n      createStepMutation({\n        variables: {\n          input: {\n            ...values,\n            tripId: +tripId,\n            lat: +lat,\n            lon: +lon,\n            imgUrls,\n          },\n        },\n      });\n    }\n  };\n\n  const onModalClose = useCallback(() => {\n    if (isUploading) {\n      return;\n    }\n    cleanupUnusedImageFilesOnCancel();\n    setIsSaveStepModal(false);\n  }, [cleanupUnusedImageFilesOnCancel, isUploading, setIsSaveStepModal]);\n\n  useEffect(() => {\n    window.addEventListener('beforeunload', cleanupUnusedImageFilesOnCancel);\n    return () =>\n      window.removeEventListener(\n        'beforeunload',\n        cleanupUnusedImageFilesOnCancel,\n      );\n  }, [cleanupUnusedImageFilesOnCancel]);\n\n  useEffect(() => {\n    if (editingStep) {\n      setValue('arrivedAt', editingStep.arrivedAt, { shouldValidate: true });\n      setValue('country', editingStep.country, { shouldValidate: true });\n      setValue('lat', editingStep.lat.toString(), { shouldValidate: true });\n      setValue('lon', editingStep.lon.toString(), { shouldValidate: true });\n      setValue('location', editingStep.location, { shouldValidate: true });\n      setValue('name', editingStep.name, { shouldValidate: true });\n      setValue('story', editingStep.story ?? '', { shouldValidate: true });\n      setValue('timeZone', editingStep.timeZone, { shouldValidate: true });\n    } else {\n      setValue('arrivedAt', belowStepDate, { shouldValidate: true });\n    }\n  }, [belowStepDate, editingStep, setValue]);\n  return (\n    <>\n      <div className=\"absolute z-50 top-0 left-0 w-full h-full bg-myGreen-darkest bg-opacity-80\"></div>\n      <div className=\"absolute z-50 top-0 left-0 w-full h-screenExceptHeader overflow-y-scroll\">\n        <div className=\"absolute top-2 left-1/2 transform -translate-x-1/2 w-11/12 bg-white rounded-2xl\">\n          <ModalCloseIcon onClick={onModalClose} />\n          <div className=\"py-6 text-center text-2xl text-myGreen-darkest font-semibold border-b\">\n            {editingStep ? 'Edit step' : 'New Trip'}\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)} className=\"p-6\">\n            <section className=\"relative p-6 mb-4 grid grid-cols-oneToTwo bg-myGray-dark rounded-2xl\">\n              <div>\n                <h3 className=\"text-white font-semibold\">Location</h3>\n                <span className=\"block text-sm font-medium text-myGray-light\">\n                  Search\n                </span>\n                <span className=\"text-sm font-medium text-myGray-light\">\n                  or click the map\n                </span>\n              </div>\n              <div className=\"rounded-sm\">\n                <div className=\"relative\">\n                  <input\n                    onChange={onLocationChange}\n                    ref={register({ required: true })}\n                    name=\"location\"\n                    placeholder=\"Enter a location\"\n                    autoComplete=\"off\"\n                    className=\"input w-full border-transparent rounded-b-none\"\n                  />\n                  <div className=\"absolute z-10 w-full flex flex-col bg-white\">\n                    {geocodeData?.map((d: any, i: number) => {\n                      return (\n                        <div\n                          key={i}\n                          onClick={async () => {\n                            const lat = (+d.point?.lat)?.toFixed(6);\n                            const lon = (+d.point?.lng)?.toFixed(6);\n                            setValue('location', d.name, {\n                              shouldValidate: true,\n                            });\n                            setValue('lat', lat, { shouldValidate: true });\n                            setValue('lon', lon, { shouldValidate: true });\n                            setValue('country', d.country, {\n                              shouldValidate: true,\n                            });\n                            setGeocodeData(null);\n                          }}\n                          className=\"px-4 py-2 cursor-pointer text-sm hover:bg-myGray-lightest\"\n                        >\n                          <span className=\"mr-2\">{d.name}</span>\n                          <span className=\"text-myGray\">{d.country}</span>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n                <div className=\"p-2 pl-4 flex bg-white text-myGray-darkest text-sm\">\n                  <div className=\"flex items-center border-r border-myGray-light\">\n                    <span className=\"font-semibold\">Lat:</span>\n                    <input\n                      ref={register({ required: true })}\n                      name=\"lat\"\n                      placeholder=\"00,000000\"\n                      className=\"ml-1 w-full focus:outline-none\"\n                    />\n                  </div>\n                  <div className=\"pl-4 flex items-center\">\n                    <span className=\"font-semibold\">Lon:</span>\n                    <input\n                      ref={register({ required: true })}\n                      name=\"lon\"\n                      placeholder=\"00,000000\"\n                      className=\"ml-1 w-full focus:outline-none\"\n                    />\n                  </div>\n                  <div\n                    onClick={async () => {\n                      const { location, lat, lon } = getValues();\n                      if (location && lat && lon) {\n                        const { ok, error, timeZone } = await getTimeZone(\n                          lat,\n                          lon,\n                        );\n                        if (ok && !error && timeZone) {\n                          setValue('timeZone', timeZone);\n                        }\n                        setIsLocationBlock(true);\n                      }\n                    }}\n                    className=\"py-1.5 px-4 rounded-full bg-myBlue text-white cursor-pointer\"\n                  >\n                    Set\n                  </div>\n                </div>\n              </div>\n              {isLocationBlock && (\n                <div\n                  onClick={() => {\n                    setIsLocationBlock((prev) => !prev);\n                  }}\n                  className=\"absolute top-0 left-0 w-full h-full p-3 rounded-2xl text-sm bg-white bg-opacity-80 cursor-pointer group hover:bg-myBlue hover:bg-opacity-80\"\n                >\n                  <div className=\"text-transparent group-hover:text-white\">\n                    <FontAwesomeIcon icon={faPencilAlt} className=\"mr-2\" />\n                    <span>Edit info</span>\n                  </div>\n                </div>\n              )}\n            </section>\n            <section className=\"relative p-6 mb-6 grid grid-cols-oneToTwo gap-y-4 rounded-2xl shadow-surround\">\n              <h3 className=\"flex items-center text-myGreen-darkest font-semibold\">\n                Step name\n              </h3>\n              <div className=\"flex\">\n                <input\n                  ref={register({ required: true })}\n                  name=\"name\"\n                  placeholder=\"-\"\n                  className=\"input w-full rounded-r-none\"\n                />\n                <input\n                  ref={register({ required: true })}\n                  name=\"country\"\n                  readOnly\n                  style={{\n                    width: watch('country')?.length + 2 + 'ch',\n                  }}\n                  className=\"px-2 py-3 w-0 text-myGray-dark border border-l-0 border-myGray bg-myGray-light rounded-r-md rounded-l-none focus:outline-none\"\n                />\n              </div>\n              <h3 className=\"flex items-center text-myGreen-darkest font-semibold\">\n                Arrival Date & Time\n              </h3>\n              <div className=\"flex\">\n                <input\n                  ref={register({ required: true })}\n                  name=\"arrivedAt\"\n                  className=\"hidden\"\n                  readOnly\n                />\n                <div\n                  className={`relative mr-3 w-full border border-solid rounded-sm cursor-pointer focus:outline-none ${\n                    isPopupCalendar ? 'border-myBlue' : 'border-myGray'\n                  }`}\n                >\n                  <div\n                    className=\"px-4 py-3 flex items-center justify-between\"\n                    onClick={() =>\n                      setIsPopupCalendar((prev) => (prev ? null : true))\n                    }\n                  >\n                    <span>\n                      {getValues().arrivedAt && getValues().timeZone\n                        ? moment\n                            .tz(watch('arrivedAt'), watch('timeZone'))\n                            .format('MMM D YYYY')\n                        : ''}\n                    </span>\n                    <FontAwesomeIcon\n                      icon={faCalendar}\n                      className=\"text-myBlue text-xl\"\n                    />\n                  </div>\n                  {isPopupCalendar && getValues('timeZone') && (\n                    <NewCalendar\n                      name=\"arrivedAt\"\n                      timeZone={getValues('timeZone')}\n                      selectedDate={getValues('arrivedAt')}\n                      effectiveSince={tripStartDate}\n                      effectiveUntil={\n                        tripEndDate\n                          ? moment(tripEndDate).add(1, 'days').format()\n                          : null\n                      }\n                    />\n                  )}\n                </div>\n                <div\n                  className={`relative px-4 py-3 border border-solid rounded-sm cursor-pointer ${\n                    isPopupCalendar === false\n                      ? 'border-myBlue'\n                      : 'border-myGray'\n                  }`}\n                >\n                  <div\n                    onClick={() =>\n                      setIsPopupCalendar((prev) =>\n                        prev === false ? null : false,\n                      )\n                    }\n                    className=\"mr-3 w-full flex items-center justify-between whitespace-nowrap\"\n                  >\n                    <span>\n                      {getValues().arrivedAt && getValues().timeZone\n                        ? moment\n                            .tz(watch('arrivedAt'), watch('timeZone'))\n                            .format('HH : mm')\n                        : ''}\n                    </span>\n                    <FontAwesomeIcon\n                      icon={faClock}\n                      className=\"text-myBlue text-xl\"\n                    />\n                  </div>\n                  {isPopupCalendar === false && (\n                    <Clock timeZone={watch('timeZone')} />\n                  )}\n                  <input\n                    ref={register()}\n                    name=\"timeZone\"\n                    readOnly\n                    className=\"hidden\"\n                  />\n                </div>\n              </div>\n              <h3 className=\"mt-3 text-myGreen-darkest font-semibold\">\n                Your story\n              </h3>\n              <textarea\n                ref={register()}\n                name=\"story\"\n                placeholder=\"What have you been up to?\"\n                className=\"resize-none px-4 py-3 h-48 border border-myGray rounded-sm focus:outline-none focus:border-myBlue\"\n              />\n              <h3 className=\"flex flex-col justify-center text-myGreen-darkest font-semibold\">\n                Add your photos\n                <span className=\"text-sm font-medium text-myGray-dark\">\n                  Drag'n drop to re-arrange\n                </span>\n              </h3>\n              <FilesArea\n                images={images}\n                setImages={setImages}\n                setImagesRecord={setImagesRecord}\n                isUploading={isUploading}\n                setIsUploading={setIsUploading}\n                uploadErr={uploadErr}\n                setUploadErr={setUploadErr}\n                editingStep={editingStep}\n              />\n              {!isLocationBlock && (\n                <div\n                  onClick={() => {\n                    const {\n                      location,\n                      lat,\n                      lon,\n                      country,\n                      timeZone,\n                    } = getValues();\n                    if (location && lat && lon && country && timeZone) {\n                      setIsLocationBlock((prev) => !prev);\n                    }\n                  }}\n                  className=\"absolute top-0 left-0 w-full h-full p-3 rounded-2xl text-sm bg-white bg-opacity-80 cursor-pointer group hover:bg-myBlue hover:bg-opacity-80\"\n                >\n                  <div className=\"text-transparent group-hover:text-white\">\n                    <FontAwesomeIcon icon={faPencilAlt} className=\"mr-2\" />\n                    <span>Edit info</span>\n                  </div>\n                </div>\n              )}\n            </section>\n            <div className=\"flex justify-between\">\n              <div>\n                <Button\n                  text={editingStep ? 'Save changes' : 'Add step'}\n                  type=\"red-solid\"\n                  loading={\n                    createStepMutationLoading || updateStepMutaionLoading\n                  }\n                  disabled={\n                    !formState.isValid ||\n                    isUploading ||\n                    createStepMutationLoading ||\n                    updateStepMutaionLoading\n                  }\n                  className=\"mr-4\"\n                />\n                <Button\n                  text=\"Cancel\"\n                  type=\"white-solid\"\n                  isSubmitBtn={false}\n                  disabled={\n                    isUploading ||\n                    createStepMutationLoading ||\n                    updateStepMutaionLoading\n                  }\n                  onClick={onModalClose}\n                />\n              </div>\n              {editingStep && (\n                <Button\n                  text=\"\"\n                  type=\"white-solid\"\n                  icon={\n                    <FontAwesomeIcon icon={faTrashAlt} className=\"text-lg\" />\n                  }\n                  fontColorClass=\"text-myRed\"\n                  isSubmitBtn={false}\n                  disabled={isUploading || updateStepMutaionLoading}\n                  onClick={() => {\n                    const isConfirmed = window.confirm(\n                      'You are deleting this step permanently. Are you sure?',\n                    );\n                    isConfirmed &&\n                      deleteStepMutation({\n                        variables: { input: { stepId: editingStep.id } },\n                      });\n                  }}\n                />\n              )}\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n","/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/partials/Day.tsx",[],["264","265"],"/home/jonganebski/github/polartypes-frontend/src/components/Cards/partials/Comment.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Map/Map.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Map/Partials/Map-event-fns.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Map/Partials/Image-marker.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Map/Partials/Plain-marker.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/context.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/__generated__/globalTypes.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/Trip-status.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Map/Partials/Dynamic-polylines.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Options.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Settings.tsx",["266"],"import { faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useState } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport { deleteFiles } from '../../helpers';\nimport { useUpdateAccount } from '../../hooks/useMutation/useUpdateAccount';\nimport { useWhoAmI } from '../../hooks/useQuery/useWhoAmI';\nimport { Button } from '../Button';\nimport { Account } from './partials/Account';\nimport { ModalBackground } from './partials/Background';\nimport { ModalCloseIcon } from './partials/CloseIcon';\nimport { Profile } from './partials/Profile';\n\ninterface ISettingsModal {\n  isProfile: boolean;\n  setIsProfile: React.Dispatch<React.SetStateAction<boolean>>;\n  isSettingsModal: boolean;\n  setIsSettingModal: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport interface ISettingsFormProps {\n  firstName: string;\n  lastName: string;\n  username: string;\n  about: string;\n  city: string;\n  timeZone: string;\n  password: string;\n  newPasswords: string[];\n  files: FileList;\n}\n\nexport const SettingsModal: React.FC<ISettingsModal> = ({\n  isProfile,\n  setIsProfile,\n  isSettingsModal,\n  setIsSettingModal,\n}) => {\n  const { data: userData } = useWhoAmI();\n\n  const [avatarSrc, setAvatarSrc] = useState(\n    userData?.whoAmI.avatarUrl ?? 'blank-profile.webp',\n  );\n  const [avatarUrl, setAvatarUrl] = useState(\n    userData?.whoAmI.avatarUrl ?? null,\n  );\n  const f = useForm<ISettingsFormProps>({\n    mode: 'onChange',\n    defaultValues: {\n      firstName: userData?.whoAmI.firstName,\n      lastName: userData?.whoAmI.lastName,\n      username: userData?.whoAmI.username,\n      about: userData?.whoAmI.about ?? '',\n      city: userData?.whoAmI.city ?? '',\n      timeZone: userData?.whoAmI.timeZone ?? '',\n    },\n  });\n  const { updateAccountMutation, isLoading, setIsLoading } = useUpdateAccount(\n    f,\n    avatarUrl,\n  );\n  const onSubmit = async () => {\n    setIsLoading(true);\n    const { files, password, newPasswords, ...values } = f.getValues();\n    if (password || newPasswords[0] || newPasswords[1]) {\n      if (newPasswords[0] !== newPasswords[1]) {\n        f.setError('newPasswords[1]', {\n          message: 'Please check your new password again.',\n        });\n        return;\n      }\n    }\n    try {\n      let url = avatarUrl;\n      if (files.length !== 0) {\n        const body = new FormData();\n        body.append('file', files[0]);\n        const response = await fetch('http://localhost:4000/aws-s3/upload', {\n          body,\n          method: 'POST',\n        });\n        avatarUrl && (await deleteFiles([avatarUrl]));\n        const result = await response.json();\n        console.log(result.error);\n        if (result.ok && !result.error && result.url) {\n          url = result.url;\n        } else {\n          throw new Error();\n        }\n      }\n      setAvatarUrl(url);\n      updateAccountMutation({\n        variables: {\n          input: {\n            ...values,\n            slug: values.username.toLowerCase(),\n            avatarUrl: url,\n            password: password ? password : null,\n            newPassword: newPasswords[0] ? newPasswords[0] : null,\n          },\n        },\n      });\n    } catch (error) {\n      setIsLoading(false);\n      console.log(error);\n    }\n  };\n\n  if (!userData) {\n    return null;\n  }\n  return (\n    <div className={`${isSettingsModal ? 'block' : 'hidden'}`}>\n      <ModalBackground onClick={() => setIsSettingModal(false)} />\n      <div className=\"fixed z-50 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-full max-w-3xl bg-white rounded-2xl overflow-hidden\">\n        <ModalCloseIcon onClick={() => setIsSettingModal(false)} />\n        <div className=\"p-6 text-2xl text-myGreen-darkest font-semibold border-b\">\n          Settings\n        </div>\n        <div className=\"p-6 flex bg-myGray-lightest\">\n          <div className=\"mr-6\">\n            <div className=\"w-48 grid gap-y-px rounded-lg border border-myGray-light bg-myGray-light overflow-hidden\">\n              <div\n                className={`p-3 flex items-center justify-between  font-semibold bg-white border-l-4 cursor-pointer ${\n                  isProfile\n                    ? 'border-myRed text-myRed'\n                    : 'border-transparent text-myGreen-dark'\n                }`}\n                onClick={() => setIsProfile(true)}\n              >\n                <span>Profile</span>\n                <FontAwesomeIcon icon={faAngleRight} />\n              </div>\n              <div\n                className={`p-3 flex items-center justify-between  font-semibold bg-white border-l-4 cursor-pointer ${\n                  !isProfile\n                    ? 'border-myRed text-myRed'\n                    : 'border-transparent text-myGreen-dark'\n                }`}\n                onClick={() => setIsProfile(false)}\n              >\n                <span>Account</span>\n                <FontAwesomeIcon icon={faAngleRight} />\n              </div>\n            </div>\n          </div>\n          <FormProvider {...f}>\n            <form className=\"w-full\" onSubmit={f.handleSubmit(onSubmit)}>\n              <Profile\n                hidden={!isProfile}\n                avatarUrl={avatarUrl}\n                avatarSrc={avatarSrc}\n                setAvatarSrc={setAvatarSrc}\n              />\n              <Account hidden={isProfile} userId={userData.whoAmI.id} />\n              <div className=\"pt-6\">\n                <Button\n                  text=\"Save Changes\"\n                  type=\"red-solid\"\n                  className=\"mr-3\"\n                  loading={isLoading}\n                />\n                <Button\n                  text=\"cancel\"\n                  type=\"white-solid\"\n                  isSubmitBtn={false}\n                  onClick={() => setIsSettingModal(false)}\n                />\n              </div>\n            </form>\n          </FormProvider>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Profile.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Account.tsx",["267","268"],"import { gql, useMutation } from '@apollo/client';\nimport React from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport { client, isLoggedInVar } from '../../../apollo';\nimport { AZ_NUM_PATTERN, PW_MIN_LENGTH, TOKEN } from '../../../constants';\nimport { useWhoAmI } from '../../../hooks/useQuery/useWhoAmI';\nimport {\n  deleteAccountMutation,\n  deleteAccountMutationVariables,\n} from '../../../__generated__/deleteAccountMutation';\nimport { whoAmIQuery } from '../../../__generated__/whoAmIQuery';\nimport { FormError } from '../../Form-error';\nimport { ISettingsFormProps } from '../Settings';\n\nconst DELETE_ACCOUNT_MUTAION = gql`\n  mutation deleteAccountMutation($input: DeleteAccountInput!) {\n    deleteAccount(input: $input) {\n      ok\n      error\n    }\n  }\n`;\n\ninterface IAccountProps {\n  hidden: boolean;\n  userId: number;\n}\n\nexport const Account: React.FC<IAccountProps> = ({ hidden, userId }) => {\n  const history = useHistory();\n  const { register, errors } = useFormContext<ISettingsFormProps>();\n  const onCompleted = async (data: deleteAccountMutation) => {\n    const {\n      deleteAccount: { ok, error },\n    } = data;\n    if (ok && !error) {\n      client.cache.evict({ id: `Users:${userId}` });\n      localStorage.removeItem(TOKEN);\n      isLoggedInVar(false);\n      history.push('/');\n    }\n  };\n  const [deleteAccountMutation] = useMutation<\n    deleteAccountMutation,\n    deleteAccountMutationVariables\n  >(DELETE_ACCOUNT_MUTAION, { onCompleted });\n  const onDeleteAccountClick = () => {\n    deleteAccountMutation({ variables: { input: { password: null } } });\n  };\n  console.log('Account rendering');\n  return (\n    <div className={`${hidden ? 'hidden' : 'block'}`}>\n      <div className=\"px-6 mb-6 rounded-lg border border-myGray-light bg-white overflow-hidden\">\n        <div className=\"py-6 flex items-center justify-between border-b border-myGray-light\">\n          <span className=\"text-myGreen-dark text-xl font-semibold\">\n            Account information\n          </span>\n          <span\n            className=\"text-xs text-myGray underline cursor-pointer hover:text-myGray-dark\"\n            onClick={onDeleteAccountClick}\n          >\n            Delete account\n          </span>\n        </div>\n        <div className=\"py-6 grid gap-6 grid-cols-oneToThree\">\n          <h6 className=\"pt-1.5 whitespace-pre text-myGreen-dark font-semibold\">\n            Personal link\n          </h6>\n          <div className=\"grid\">\n            <div className=\"grid grid-cols-2\">\n              <div className=\"flex items-center justify-center bg-myGray-light text-myGray-dark border-t border-b border-l border-myGray rounded-l-sm\">\n                xxx.netlyfy.com/\n              </div>\n\n              <input\n                className=\"px-4 py-3 border border-solid border-myGray rounded-r-sm focus:border-myBlue focus:outline-none\"\n                ref={register({\n                  required: 'Enter a profile link',\n                  pattern: {\n                    value: AZ_NUM_PATTERN,\n                    message: 'Only english characters and numbers are allowed.',\n                  },\n                })}\n                name=\"username\"\n                type=\"text\"\n                placeholder=\"Your link name\"\n              />\n            </div>\n            {errors.username?.message && (\n              <FormError err={errors.username.message} />\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"px-6 rounded-lg border border-myGray-light bg-white overflow-hidden\">\n        <div className=\"py-6 flex items-center justify-between border-b border-myGray-light\">\n          <span className=\"text-myGreen-dark text-xl font-semibold\">\n            Password\n          </span>\n          <span className=\"text-xs text-myGray-dark\">\n            Leave blank if you don't want to change it\n          </span>\n        </div>\n        <div className=\"py-6 grid gap-6 grid-cols-oneToThree\">\n          <h6 className=\"pt-1.5 whitespace-pre text-myGreen-dark font-semibold\">\n            Current password\n          </h6>\n          <div className=\"grid\">\n            <input\n              className=\"input\"\n              ref={register({\n                minLength: {\n                  value: PW_MIN_LENGTH,\n                  message: `Password length should be at least ${PW_MIN_LENGTH}.`,\n                },\n              })}\n              name=\"password\"\n              type=\"password\"\n            />\n            {errors.password?.message && (\n              <FormError err={errors.password?.message} />\n            )}\n          </div>\n          <h6 className=\"pt-1.5 whitespace-pre text-myGreen-dark font-semibold\">\n            New password\n          </h6>\n          <div className=\"grid\">\n            <input\n              className=\"input\"\n              ref={register({\n                minLength: {\n                  value: PW_MIN_LENGTH,\n                  message: `Password length should be at least ${PW_MIN_LENGTH}.`,\n                },\n              })}\n              name=\"newPasswords[0]\"\n              type=\"password\"\n            />\n            {errors.newPasswords && errors.newPasswords[0]?.message && (\n              <FormError err={errors.newPasswords[0]?.message} />\n            )}\n          </div>\n          <h6 className=\"pt-1.5 whitespace-pre text-myGreen-dark font-semibold\">\n            New password again\n          </h6>\n          <div className=\"grid\">\n            <input\n              className=\"input\"\n              ref={register({\n                minLength: {\n                  value: PW_MIN_LENGTH,\n                  message: `Password length should be at least ${PW_MIN_LENGTH}.`,\n                },\n              })}\n              name=\"newPasswords[1]\"\n              type=\"password\"\n            />\n            {errors.newPasswords && errors.newPasswords[1]?.message && (\n              <FormError err={errors.newPasswords[1]?.message} />\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/home/jonganebski/github/polartypes-frontend/src/fragments.ts",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useCalendar.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/StepImages.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateTrip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useFollow.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUnfollow.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useTrips.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useWhoAmI.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useTrip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useCreateStep.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useDeleteStep.tsx",["269","270","271"],"import { gql, useMutation } from '@apollo/client';\nimport { UseFormMethods } from 'react-hook-form';\nimport { client } from '../../apollo';\nimport { TImage } from '../../components/Modals/Save-step';\nimport { deleteFiles } from '../../helpers';\nimport { ICreateStepFormProps } from '../../pages/Trip';\nimport {\n  deleteStepMutation,\n  deleteStepMutationVariables,\n} from '../../__generated__/deleteStepMutation';\nimport {\n  readTripQuery,\n  readTripQueryVariables,\n} from '../../__generated__/readTripQuery';\nimport { READ_TRIP_QUERY } from '../useQuery/useTrip';\n\nconst DELETE_STEP_MUTATION = gql`\n  mutation deleteStepMutation($input: DeleteStepInput!) {\n    deleteStep(input: $input) {\n      ok\n      error\n      stepId\n    }\n  }\n`;\n\nexport const useDeleteStep = (\n  f: UseFormMethods<ICreateStepFormProps>,\n  tripId: string,\n  images: TImage[],\n  setIsCreateStepModal: (value: React.SetStateAction<boolean>) => void,\n) => {\n  const onDeleteStepCompleted = (data: deleteStepMutation) => {\n    const {\n      deleteStep: { ok, error, stepId },\n    } = data;\n    if (!ok || error || !stepId) {\n      return;\n    }\n    client.cache.evict({ id: `Step:${stepId}` });\n    const imgUrls = images.reduce((acc, img) => {\n      if (img.url) {\n        return [...acc, img.url];\n      } else {\n        return acc;\n      }\n    }, [] as string[]);\n    deleteFiles(imgUrls);\n    setIsCreateStepModal(false);\n  };\n\n  return useMutation<deleteStepMutation, deleteStepMutationVariables>(\n    DELETE_STEP_MUTATION,\n    { onCompleted: onDeleteStepCompleted },\n  );\n};\n","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateStep.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateAccount.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Save-trip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useDeleteTrip.tsx",["272"],"import { gql, useMutation } from '@apollo/client';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { client } from '../../apollo';\nimport {\n  deleteTripMutation,\n  deleteTripMutationVariables,\n} from '../../__generated__/deleteTripMutation';\nimport { useWhoAmI } from '../useQuery/useWhoAmI';\n\nconst DELETE_TRIP_MUTATION = gql`\n  mutation deleteTripMutation($input: DeleteTripInput!) {\n    deleteTrip(input: $input) {\n      ok\n      error\n    }\n  }\n`;\n\nexport const useDeleteTrip = (tripId?: number) => {\n  const { data: userData } = useWhoAmI();\n  const history = useHistory();\n  const onCompleted = (data: deleteTripMutation) => {\n    const {\n      deleteTrip: { ok, error },\n    } = data;\n    if (ok && !error && userData && tripId) {\n      client.cache.evict({ id: `Trip:${tripId}` });\n      history.push(`/${userData.whoAmI.username}`);\n    }\n  };\n  return useMutation<deleteTripMutation, deleteTripMutationVariables>(\n    DELETE_TRIP_MUTATION,\n    { onCompleted },\n  );\n};\n","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useToggleLike.tsx",[],{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","replacedBy":"276"},{"ruleId":"277","severity":1,"message":"278","line":68,"column":16,"nodeType":"279","messageId":"280","endLine":68,"endColumn":40},{"ruleId":"273","replacedBy":"281"},{"ruleId":"275","replacedBy":"282"},{"ruleId":"277","severity":1,"message":"283","line":5,"column":10,"nodeType":"279","messageId":"280","endLine":5,"endColumn":20},{"ruleId":"277","severity":1,"message":"284","line":7,"column":10,"nodeType":"279","messageId":"280","endLine":7,"endColumn":19},{"ruleId":"277","severity":1,"message":"285","line":12,"column":10,"nodeType":"279","messageId":"280","endLine":12,"endColumn":21},{"ruleId":"277","severity":1,"message":"286","line":12,"column":3,"nodeType":"279","messageId":"280","endLine":12,"endColumn":16},{"ruleId":"277","severity":1,"message":"287","line":13,"column":3,"nodeType":"279","messageId":"280","endLine":13,"endColumn":25},{"ruleId":"277","severity":1,"message":"288","line":15,"column":10,"nodeType":"279","messageId":"280","endLine":15,"endColumn":25},{"ruleId":"277","severity":1,"message":"289","line":2,"column":8,"nodeType":"279","messageId":"280","endLine":2,"endColumn":13},"no-native-reassign",["290"],"no-negated-in-lhs",["291"],"@typescript-eslint/no-unused-vars","'deleteStepMutaionLoading' is assigned a value but never used.","Identifier","unusedVar",["290"],["291"],"'useHistory' is defined but never used.","'useWhoAmI' is defined but never used.","'whoAmIQuery' is defined but never used.","'readTripQuery' is defined but never used.","'readTripQueryVariables' is defined but never used.","'READ_TRIP_QUERY' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]