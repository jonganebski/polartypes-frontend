[{"/home/jonganebski/github/polartypes-frontend/src/index.tsx":"1","/home/jonganebski/github/polartypes-frontend/src/reportWebVitals.ts":"2","/home/jonganebski/github/polartypes-frontend/src/components/App.tsx":"3","/home/jonganebski/github/polartypes-frontend/src/router/router.tsx":"4","/home/jonganebski/github/polartypes-frontend/src/pages/Home.tsx":"5","/home/jonganebski/github/polartypes-frontend/src/components/Form-error.tsx":"6","/home/jonganebski/github/polartypes-frontend/src/components/Button.tsx":"7","/home/jonganebski/github/polartypes-frontend/src/apollo.ts":"8","/home/jonganebski/github/polartypes-frontend/src/constants.ts":"9","/home/jonganebski/github/polartypes-frontend/src/components/Loading-spinner.tsx":"10","/home/jonganebski/github/polartypes-frontend/src/pages/Trips.tsx":"11","/home/jonganebski/github/polartypes-frontend/src/components/Logo.tsx":"12","/home/jonganebski/github/polartypes-frontend/src/components/Avatar.tsx":"13","/home/jonganebski/github/polartypes-frontend/src/hooks/useWhoAmI.tsx":"14","/home/jonganebski/github/polartypes-frontend/src/hooks/useGeocoder.ts":"15","/home/jonganebski/github/polartypes-frontend/src/hooks/useUpdateAccount.tsx":"16","/home/jonganebski/github/polartypes-frontend/src/pages/Trip.tsx":"17","/home/jonganebski/github/polartypes-frontend/src/components/Button-add-step.tsx":"18","/home/jonganebski/github/polartypes-frontend/src/helpers.ts":"19","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Signin.tsx":"20","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Signup.tsx":"21","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Create-trip.tsx":"22","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Set-time-zone.tsx":"23","/home/jonganebski/github/polartypes-frontend/src/components/Cards/Trip.tsx":"24","/home/jonganebski/github/polartypes-frontend/src/components/Cards/Step.tsx":"25","/home/jonganebski/github/polartypes-frontend/src/components/Headers/HomeHeader.tsx":"26","/home/jonganebski/github/polartypes-frontend/src/components/Headers/CommonHeader.tsx":"27","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Background.tsx":"28","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/CloseIcon.tsx":"29","/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Calendar.tsx":"30","/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Clock.tsx":"31","/home/jonganebski/github/polartypes-frontend/src/components/Cards/partials/Comments.tsx":"32","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/FilesArea.tsx":"33","/home/jonganebski/github/polartypes-frontend/src/hooks/useDragNDrop-file.ts":"34","/home/jonganebski/github/polartypes-frontend/src/hooks/useDragNDrop-image.ts":"35","/home/jonganebski/github/polartypes-frontend/src/hooks/useCreateStep.tsx":"36","/home/jonganebski/github/polartypes-frontend/src/hooks/useUpdateStep.tsx":"37","/home/jonganebski/github/polartypes-frontend/src/hooks/useDeleteStep.tsx":"38","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Save-step.tsx":"39","/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/partials/Day.tsx":"40","/home/jonganebski/github/polartypes-frontend/src/__generated__/globalTypes.ts":"41"},{"size":665,"mtime":1608710035710,"results":"42","hashOfConfig":"43"},{"size":425,"mtime":1608450751420,"results":"44","hashOfConfig":"43"},{"size":132,"mtime":1608710051560,"results":"45","hashOfConfig":"43"},{"size":745,"mtime":1608710108740,"results":"46","hashOfConfig":"43"},{"size":2556,"mtime":1608808316760,"results":"47","hashOfConfig":"43"},{"size":195,"mtime":1608536237160,"results":"48","hashOfConfig":"43"},{"size":1748,"mtime":1608981469360,"results":"49","hashOfConfig":"43"},{"size":970,"mtime":1609050512200,"results":"50","hashOfConfig":"43"},{"size":526,"mtime":1608860991300,"results":"51","hashOfConfig":"43"},{"size":480,"mtime":1608870180250,"results":"52","hashOfConfig":"43"},{"size":5421,"mtime":1609113871080,"results":"53","hashOfConfig":"43"},{"size":904,"mtime":1608590422580,"results":"54","hashOfConfig":"43"},{"size":304,"mtime":1608557526610,"results":"55","hashOfConfig":"43"},{"size":334,"mtime":1609129798850,"results":"56","hashOfConfig":"43"},{"size":1197,"mtime":1608773922930,"results":"57","hashOfConfig":"43"},{"size":570,"mtime":1608683859040,"results":"58","hashOfConfig":"43"},{"size":11271,"mtime":1609127264380,"results":"59","hashOfConfig":"43"},{"size":914,"mtime":1608723593710,"results":"60","hashOfConfig":"43"},{"size":1314,"mtime":1609034777640,"results":"61","hashOfConfig":"43"},{"size":4189,"mtime":1608808552000,"results":"62","hashOfConfig":"43"},{"size":5224,"mtime":1608808552770,"results":"63","hashOfConfig":"43"},{"size":12607,"mtime":1609125235010,"results":"64","hashOfConfig":"43"},{"size":3940,"mtime":1608808554550,"results":"65","hashOfConfig":"43"},{"size":2588,"mtime":1608983721910,"results":"66","hashOfConfig":"43"},{"size":5785,"mtime":1609130348900,"results":"67","hashOfConfig":"43"},{"size":1186,"mtime":1608808312077,"results":"68","hashOfConfig":"43"},{"size":2069,"mtime":1608808297927,"results":"69","hashOfConfig":"43"},{"size":346,"mtime":1608808547467,"results":"70","hashOfConfig":"43"},{"size":591,"mtime":1608808437185,"results":"71","hashOfConfig":"43"},{"size":7620,"mtime":1609125228992,"results":"72","hashOfConfig":"43"},{"size":2919,"mtime":1609112073590,"results":"73","hashOfConfig":"43"},{"size":1691,"mtime":1608808512130,"results":"74","hashOfConfig":"43"},{"size":5526,"mtime":1609112071790,"results":"75","hashOfConfig":"43"},{"size":3944,"mtime":1609112067730,"results":"76","hashOfConfig":"43"},{"size":1692,"mtime":1609112069650,"results":"77","hashOfConfig":"43"},{"size":2461,"mtime":1609112075380,"results":"78","hashOfConfig":"43"},{"size":1912,"mtime":1609112079010,"results":"79","hashOfConfig":"43"},{"size":2126,"mtime":1609112077150,"results":"80","hashOfConfig":"43"},{"size":19381,"mtime":1609125236360,"results":"81","hashOfConfig":"43"},{"size":625,"mtime":1609119567670,"results":"82","hashOfConfig":"43"},{"size":3736,"mtime":1609129424820,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"wm2czq",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"/home/jonganebski/github/polartypes-frontend/src/index.tsx",[],["169","170"],"/home/jonganebski/github/polartypes-frontend/src/reportWebVitals.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/App.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/router/router.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/pages/Home.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Form-error.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Button.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/apollo.ts",[],"/home/jonganebski/github/polartypes-frontend/src/constants.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/Loading-spinner.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/pages/Trips.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Logo.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Avatar.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useWhoAmI.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useGeocoder.ts",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useUpdateAccount.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/pages/Trip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Button-add-step.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/helpers.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Signin.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Signup.tsx",["171","172"],"import { gql, useMutation } from '@apollo/client';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport { authTokenVar, isLoggedInVar } from '../../apollo';\nimport {\n  AZ_NUM_PATTERN,\n  EMAIL_PATTERN,\n  PW_MIN_LENGTH,\n  TOKEN,\n} from '../../constants';\nimport {\n  createAccountMutation,\n  createAccountMutationVariables,\n} from '../../__generated__/createAccountMutation';\nimport { Button } from '../Button';\nimport { FormError } from '../Form-error';\nimport { ModalCloseIcon } from './partials/CloseIcon';\nimport { ModalBackground } from './partials/Background';\n\nconst CREATE_ACCOUNT_MUTAION = gql`\n  mutation createAccountMutation($input: CreateAccountInput!) {\n    createAccount(input: $input) {\n      ok\n      error\n      token\n      username\n    }\n  }\n`;\n\ninterface ISignupModalProps {\n  setIsSignup: React.Dispatch<React.SetStateAction<boolean | null>>;\n}\n\ninterface IFormProps {\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n}\n\nexport const SignupModal: React.FC<ISignupModalProps> = ({ setIsSignup }) => {\n  const history = useHistory();\n  const {\n    register,\n    getValues,\n    formState,\n    handleSubmit,\n    errors,\n  } = useForm<IFormProps>({ mode: 'onChange' });\n  const onCompleted = (data: createAccountMutation) => {\n    const {\n      createAccount: { ok, error, token, username },\n    } = data;\n    if (ok && token && username && !error) {\n      localStorage.setItem(TOKEN, token);\n      authTokenVar(token);\n      isLoggedInVar(true);\n      history.push(`/${username}`);\n    }\n  };\n  const [\n    createAccountMutation,\n    { loading, data: mutationResult },\n  ] = useMutation<createAccountMutation, createAccountMutationVariables>(\n    CREATE_ACCOUNT_MUTAION,\n    { onCompleted },\n  );\n  const onSubmit = () => {\n    createAccountMutation({ variables: { input: { ...getValues() } } });\n  };\n  return (\n    <>\n      <ModalBackground onClick={() => setIsSignup(null)} />\n      <div className=\"modal\">\n        <ModalCloseIcon onClick={() => setIsSignup(null)} />\n        <div className=\"py-6 text-center text-2xl text-myGreen-darkest font-semibold border-b\">\n          New account\n        </div>\n        <form onSubmit={handleSubmit(onSubmit)} className=\"grid gap-y-5 p-6\">\n          <div>\n            <div className=\"grid grid-cols-2 gap-2\">\n              <input\n                ref={register({\n                  required: 'Your first name is required.',\n                  pattern: AZ_NUM_PATTERN,\n                })}\n                name=\"firstName\"\n                type=\"text\"\n                placeholder=\"First name\"\n                className=\"input w-full\"\n              />\n              <input\n                ref={register({\n                  required: 'Your last name is required.',\n                  pattern: AZ_NUM_PATTERN,\n                })}\n                name=\"lastName\"\n                type=\"text\"\n                placeholder=\"Last name\"\n                className=\"input w-full\"\n              />\n            </div>\n            {(errors.firstName?.message || errors.lastName?.message) && (\n              <div className=\"grid grid-cols-2 gap-2\">\n                <FormError err={errors.firstName?.message} />\n                <FormError err={errors.lastName?.message} />\n              </div>\n            )}\n          </div>\n          <div className=\"grid\">\n            <input\n              ref={register({\n                required: 'Your e-mail address is required.',\n                pattern: EMAIL_PATTERN,\n              })}\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Email\"\n              className=\"input\"\n            />\n            {errors.email?.message && <FormError err={errors.email.message} />}\n          </div>\n          <div className=\"grid mb-2\">\n            <input\n              ref={register({\n                required: 'You need to enter a password.',\n                minLength: PW_MIN_LENGTH,\n              })}\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              className=\"input\"\n            />\n            {errors.password?.message && (\n              <FormError err={errors.password?.message} />\n            )}\n          </div>\n          {mutationResult?.createAccount.error && (\n            <FormError err={mutationResult.createAccount.error} />\n          )}\n          <Button\n            text=\"Sign up\"\n            type=\"red-solid\"\n            disabled={!formState.isValid}\n            loading={loading}\n          />\n        </form>\n        <div className=\"p-6 text-center bg-myGray-lightest border-t border-t-myGray-light rounded-b-2xl hover:bg-myGray-light\">\n          <span className=\"text-myGray-dark text-sm mr-1\">\n            Already have a Polartypes account?\n          </span>\n          <span\n            onClick={() => {\n              setIsSignup(false);\n            }}\n            className=\"text-myBlue text-sm underline cursor-pointer\"\n          >\n            Log in\n          </span>\n        </div>\n      </div>\n    </>\n  );\n};\n","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Create-trip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Set-time-zone.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Cards/Trip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Cards/Step.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Headers/HomeHeader.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Headers/CommonHeader.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Background.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/CloseIcon.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Calendar.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Clock.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Cards/partials/Comments.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/FilesArea.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useDragNDrop-file.ts",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useDragNDrop-image.ts",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useCreateStep.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useUpdateStep.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useDeleteStep.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Save-step.tsx",["173"],"import {\n  faCalendar,\n  faClock,\n  faTrashAlt,\n} from '@fortawesome/free-regular-svg-icons';\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport moment from 'moment';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { deleteFiles, getTimeZone } from '../../helpers';\nimport { useCreateStep } from '../../hooks/useCreateStep';\nimport { useDeleteStep } from '../../hooks/useDeleteStep';\nimport { useGeocoder } from '../../hooks/useGeocoder';\nimport { useUpdateStep } from '../../hooks/useUpdateStep';\nimport { readTripQuery_readTrip_trip_steps } from '../../__generated__/readTripQuery';\nimport { Button } from '../Button';\nimport { Clock } from '../Tooltips/Clock';\nimport { NewCalendar } from '../Tooltips/Calendar';\nimport { ModalCloseIcon } from './partials/CloseIcon';\nimport { FilesArea } from './partials/FilesArea';\n\ninterface ISaveStepModalProps {\n  tripId: string;\n  tripStartDate: string;\n  tripEndDate: string | null;\n  belowStepDate: string;\n  belowStepTimeZone: string;\n  setIsSaveStepModal: React.Dispatch<React.SetStateAction<boolean>>;\n  editingStep: readTripQuery_readTrip_trip_steps | null;\n}\n\nexport interface ICreateStepFormProps {\n  location: string;\n  name: string;\n  country: string;\n  lat: string;\n  lon: string;\n  story: string;\n  arrivedAt: string;\n  timeZone: string;\n}\n\nexport type TImage = { id?: string; src?: string; url?: string };\n\nexport const SaveStepModal: React.FC<ISaveStepModalProps> = ({\n  tripId,\n  tripStartDate,\n  tripEndDate,\n  belowStepDate,\n  belowStepTimeZone,\n  setIsSaveStepModal,\n  editingStep,\n}) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n  const [isLocationBlock, setIsLocationBlock] = useState(false);\n  const [uploadErr, setUploadErr] = useState('');\n  const [isPopupCalendar, setIsPopupCalendar] = useState<boolean | null>(null);\n  const [images, setImages] = useState<TImage[]>(\n    editingStep?.imgUrls?.map((url) => ({ url })) ?? [],\n  );\n  const [imagesRecord, setImagesRecord] = useState<TImage[]>(images);\n  console.log('images: ', images);\n  console.log('imagesRecord: ', imagesRecord);\n  const f = useForm<ICreateStepFormProps>({\n    mode: 'onChange',\n    defaultValues: {\n      arrivedAt: editingStep?.arrivedAt ?? belowStepDate,\n      country: editingStep?.country,\n      lat: editingStep?.lat.toString(),\n      lon: editingStep?.lon.toString(),\n      location: editingStep?.location,\n      name: editingStep?.name,\n      story: editingStep?.story ?? '',\n      timeZone: editingStep?.timeZone,\n    },\n  });\n  const [\n    createStepMutation,\n    { loading: createStepMutationLoading },\n  ] = useCreateStep(f, tripId, images, setIsSaveStepModal);\n\n  const [\n    updateStepMutation,\n    { loading: updateStepMutaionLoading },\n  ] = useUpdateStep(f, editingStep, images, setIsSaveStepModal);\n\n  const [\n    deleteStepMutation,\n    { loading: deleteStepMutaionLoading },\n  ] = useDeleteStep(f, tripId, images, setIsSaveStepModal);\n\n  const { geocodeData, setGeocodeData } = useGeocoder(searchTerm);\n\n  const onLocationChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.currentTarget.value);\n  };\n\n  const cleanupUnusedImageFilesOnCancel = useCallback(() => {\n    if (imagesRecord.length === 0 || !imagesRecord.some((image) => image.url)) {\n      return;\n    }\n    console.log('cleanupUnusedImageFilesOnCancel starting...');\n    const urls: string[] = [];\n    if (editingStep) {\n      imagesRecord.forEach((image) => {\n        if (!image.url) {\n          return;\n        }\n        const isUsedImage = editingStep.imgUrls?.some(\n          (url) => url === image.url,\n        );\n        console.log(image, isUsedImage);\n        if (!isUsedImage) {\n          urls.push(image.url);\n        }\n      });\n    } else {\n      imagesRecord.forEach((image) => image.url && urls.push(image.url));\n    }\n    console.log('deleting files in s3: ', urls);\n    urls.length !== 0 && deleteFiles(urls);\n  }, [editingStep, imagesRecord]);\n\n  const cleanupUnusedImageFilesOnEditSubmit = () => {\n    if (imagesRecord.length === 0 || !imagesRecord.some((image) => image.url)) {\n      return;\n    }\n    console.log('cleanupUnusedImageFilesOnEditSubmit starting...');\n    const urls: string[] = [];\n    imagesRecord.forEach((image) => {\n      if (!image.url) {\n        return;\n      }\n      const isUsedImage = images.some((img) => img.url === image.url);\n      console.log(image, isUsedImage);\n      if (!isUsedImage) {\n        urls.push(image.url);\n      }\n    });\n    console.log('deleting files in s3: ', urls);\n    urls.length !== 0 && deleteFiles(urls);\n  };\n\n  const onSubmit = () => {\n    const { lat, lon, ...values } = f.getValues();\n    const imgUrls = images.reduce((acc, img) => {\n      if (img.url) {\n        return [...acc, img.url];\n      } else {\n        return acc;\n      }\n    }, [] as string[]);\n    if (editingStep) {\n      console.log('updateStepMutation starting...');\n      cleanupUnusedImageFilesOnEditSubmit();\n      updateStepMutation({\n        variables: {\n          input: {\n            ...values,\n            stepId: editingStep.id,\n            lat: +lat,\n            lon: +lon,\n            imgUrls,\n          },\n        },\n      });\n    } else {\n      console.log('createStepMutation starting...');\n      createStepMutation({\n        variables: {\n          input: {\n            ...values,\n            tripId: +tripId,\n            lat: +lat,\n            lon: +lon,\n            imgUrls,\n          },\n        },\n      });\n    }\n  };\n\n  const onModalClose = useCallback(() => {\n    if (isUploading) {\n      return;\n    }\n    cleanupUnusedImageFilesOnCancel();\n    setIsSaveStepModal(false);\n  }, [cleanupUnusedImageFilesOnCancel, isUploading, setIsSaveStepModal]);\n\n  useEffect(() => {\n    window.addEventListener('beforeunload', cleanupUnusedImageFilesOnCancel);\n    return () =>\n      window.removeEventListener(\n        'beforeunload',\n        cleanupUnusedImageFilesOnCancel,\n      );\n  }, [cleanupUnusedImageFilesOnCancel]);\n\n  return (\n    <FormProvider {...f}>\n      <div className=\"absolute z-50 top-0 left-0 w-full h-full bg-myGreen-darkest bg-opacity-80\"></div>\n      <div className=\"absolute z-50 top-0 left-0 w-full h-screenExceptHeader overflow-y-scroll\">\n        <div className=\"absolute top-2 left-1/2 transform -translate-x-1/2 w-11/12 bg-white rounded-2xl\">\n          <ModalCloseIcon onClick={onModalClose} />\n          <div className=\"py-6 text-center text-2xl text-myGreen-darkest font-semibold border-b\">\n            New Trip\n          </div>\n          <form onSubmit={f.handleSubmit(onSubmit)} className=\"p-6\">\n            <section className=\"relative p-6 mb-4 grid grid-cols-oneToTwo bg-myGray-dark rounded-2xl\">\n              <h3 className=\"text-white font-semibold\">Location</h3>\n              <div className=\"rounded-sm\">\n                <div className=\"relative\">\n                  <input\n                    onChange={onLocationChange}\n                    ref={f.register({ required: true })}\n                    name=\"location\"\n                    placeholder=\"Enter a location\"\n                    autoComplete=\"off\"\n                    className=\"input w-full border-transparent rounded-b-none\"\n                  />\n                  <div className=\"absolute z-10 w-full flex flex-col bg-white\">\n                    {geocodeData?.map((d: any, i: number) => {\n                      return (\n                        <div\n                          key={i}\n                          onClick={async () => {\n                            const lat = (+d.point?.lat)?.toFixed(6);\n                            const lon = (+d.point?.lng)?.toFixed(6);\n                            f.setValue('location', d.name, {\n                              shouldValidate: true,\n                            });\n                            f.setValue('lat', lat, { shouldValidate: true });\n                            f.setValue('lon', lon, { shouldValidate: true });\n                            f.setValue('country', d.country, {\n                              shouldValidate: true,\n                            });\n                            setGeocodeData(null);\n                          }}\n                          className=\"px-4 py-2 cursor-pointer text-sm hover:bg-myGray-lightest\"\n                        >\n                          <span className=\"mr-2\">{d.name}</span>\n                          <span className=\"text-myGray\">{d.country}</span>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n                <div className=\"p-2 pl-4 flex bg-white text-myGray-darkest text-sm\">\n                  <div className=\"flex items-center border-r border-myGray-light\">\n                    <span className=\"font-semibold\">Lat:</span>\n                    <input\n                      ref={f.register({ required: true })}\n                      name=\"lat\"\n                      placeholder=\"00,000000\"\n                      className=\"ml-1 w-full focus:outline-none\"\n                    />\n                  </div>\n                  <div className=\"pl-4 flex items-center\">\n                    <span className=\"font-semibold\">Lon:</span>\n                    <input\n                      ref={f.register({ required: true })}\n                      name=\"lon\"\n                      placeholder=\"00,000000\"\n                      className=\"ml-1 w-full focus:outline-none\"\n                    />\n                  </div>\n                  <div\n                    onClick={async () => {\n                      const { location, lat, lon } = f.getValues();\n                      if (location && lat && lon) {\n                        const { ok, error, timeZone } = await getTimeZone(\n                          lat,\n                          lon,\n                        );\n                        if (ok && !error && timeZone) {\n                          f.setValue('timeZone', timeZone);\n                        }\n                        setIsLocationBlock(true);\n                      }\n                    }}\n                    className=\"py-1.5 px-4 rounded-full bg-myBlue text-white cursor-pointer\"\n                  >\n                    Set\n                  </div>\n                </div>\n              </div>\n              {isLocationBlock && (\n                <div\n                  onClick={() => {\n                    setIsLocationBlock((prev) => !prev);\n                  }}\n                  className=\"absolute top-0 left-0 w-full h-full p-3 rounded-2xl text-sm bg-white bg-opacity-80 cursor-pointer group hover:bg-myBlue hover:bg-opacity-80\"\n                >\n                  <div className=\"text-transparent group-hover:text-white\">\n                    <FontAwesomeIcon icon={faPencilAlt} className=\"mr-2\" />\n                    <span>Edit info</span>\n                  </div>\n                </div>\n              )}\n            </section>\n            <section className=\"relative p-6 mb-6 grid grid-cols-oneToTwo gap-y-4 rounded-2xl shadow-surround\">\n              <h3 className=\"flex items-center text-myGreen-darkest font-semibold\">\n                Step name\n              </h3>\n              <div className=\"flex\">\n                <input\n                  ref={f.register({ required: true })}\n                  name=\"name\"\n                  placeholder=\"-\"\n                  className=\"input w-full rounded-r-none\"\n                />\n                <input\n                  ref={f.register({ required: true })}\n                  name=\"country\"\n                  readOnly\n                  style={{\n                    width: f.watch('country')?.length + 2 + 'ch',\n                  }}\n                  className=\"px-2 py-3 w-0 text-myGray-dark border border-l-0 border-myGray bg-myGray-light rounded-r-md rounded-l-none focus:outline-none\"\n                />\n              </div>\n              <h3 className=\"flex items-center text-myGreen-darkest font-semibold\">\n                Arrival Date & Time\n              </h3>\n              <div className=\"flex\">\n                <input\n                  ref={f.register({ required: true })}\n                  name=\"arrivedAt\"\n                  className=\"hidden\"\n                  readOnly\n                />\n                <div\n                  className={`relative mr-3 w-full border border-solid rounded-sm cursor-pointer focus:outline-none ${\n                    isPopupCalendar ? 'border-myBlue' : 'border-myGray'\n                  }`}\n                >\n                  <div\n                    className=\"px-4 py-3 flex items-center justify-between\"\n                    onClick={() =>\n                      setIsPopupCalendar((prev) => (prev ? null : true))\n                    }\n                  >\n                    <span>\n                      {f.getValues().arrivedAt && f.getValues().timeZone\n                        ? moment\n                            .tz(f.watch('arrivedAt'), f.watch('timeZone'))\n                            .format('MMM D YYYY')\n                        : ''}\n                    </span>\n                    <FontAwesomeIcon\n                      icon={faCalendar}\n                      className=\"text-myBlue text-xl\"\n                    />\n                  </div>\n                  {isPopupCalendar && f.getValues('timeZone') && (\n                    <NewCalendar\n                      name=\"arrivedAt\"\n                      timeZone={f.getValues('timeZone')}\n                      selectedDate={moment.tz(\n                        f.getValues('arrivedAt'),\n                        f.getValues('timeZone'),\n                      )}\n                      effectiveSince={tripStartDate}\n                      effectiveUntil={moment(tripEndDate)\n                        .add(1, 'days')\n                        .format()}\n                    />\n                  )}\n                </div>\n                <div\n                  className={`relative px-4 py-3 border border-solid rounded-sm cursor-pointer ${\n                    isPopupCalendar === false\n                      ? 'border-myBlue'\n                      : 'border-myGray'\n                  }`}\n                >\n                  <div\n                    onClick={() =>\n                      setIsPopupCalendar((prev) =>\n                        prev === false ? null : false,\n                      )\n                    }\n                    className=\"mr-3 w-full flex items-center justify-between whitespace-nowrap\"\n                  >\n                    <span>\n                      {f.getValues().arrivedAt && f.getValues().timeZone\n                        ? moment\n                            .tz(f.watch('arrivedAt'), f.watch('timeZone'))\n                            .format('HH : mm')\n                        : ''}\n                    </span>\n                    <FontAwesomeIcon\n                      icon={faClock}\n                      className=\"text-myBlue text-xl\"\n                    />\n                  </div>\n                  {isPopupCalendar === false && (\n                    <Clock timeZone={f.watch('timeZone')} />\n                  )}\n                  <input\n                    ref={f.register()}\n                    name=\"timeZone\"\n                    readOnly\n                    className=\"hidden\"\n                  />\n                </div>\n              </div>\n              <h3 className=\"mt-3 text-myGreen-darkest font-semibold\">\n                Your story\n              </h3>\n              <textarea\n                ref={f.register()}\n                name=\"story\"\n                placeholder=\"What have you been up to?\"\n                className=\"resize-none px-4 py-3 h-48 border border-myGray rounded-sm focus:outline-none focus:border-myBlue\"\n              />\n              <h3 className=\"flex flex-col justify-center text-myGreen-darkest font-semibold\">\n                Add your photos\n                <span className=\"text-sm font-medium text-myGray-dark\">\n                  Drag'n drop to re-arrange\n                </span>\n              </h3>\n              <FilesArea\n                images={images}\n                setImages={setImages}\n                setImagesRecord={setImagesRecord}\n                isUploading={isUploading}\n                setIsUploading={setIsUploading}\n                uploadErr={uploadErr}\n                setUploadErr={setUploadErr}\n                editingStep={editingStep}\n              />\n              {!isLocationBlock && (\n                <div\n                  onClick={() => {\n                    const {\n                      location,\n                      lat,\n                      lon,\n                      country,\n                      timeZone,\n                    } = f.getValues();\n                    if (location && lat && lon && country && timeZone) {\n                      setIsLocationBlock((prev) => !prev);\n                    }\n                  }}\n                  className=\"absolute top-0 left-0 w-full h-full p-3 rounded-2xl text-sm bg-white bg-opacity-80 cursor-pointer group hover:bg-myBlue hover:bg-opacity-80\"\n                >\n                  <div className=\"text-transparent group-hover:text-white\">\n                    <FontAwesomeIcon icon={faPencilAlt} className=\"mr-2\" />\n                    <span>Edit info</span>\n                  </div>\n                </div>\n              )}\n            </section>\n            <div className=\"flex justify-between\">\n              <div>\n                <Button\n                  text={editingStep ? 'Save changes' : 'Add step'}\n                  type=\"red-solid\"\n                  loading={\n                    createStepMutationLoading || updateStepMutaionLoading\n                  }\n                  disabled={\n                    !f.formState.isValid ||\n                    isUploading ||\n                    createStepMutationLoading ||\n                    updateStepMutaionLoading\n                  }\n                  className=\"mr-4\"\n                />\n                <Button\n                  text=\"Cancel\"\n                  type=\"white-solid\"\n                  isSubmitBtn={false}\n                  disabled={\n                    isUploading ||\n                    createStepMutationLoading ||\n                    updateStepMutaionLoading\n                  }\n                  onClick={onModalClose}\n                />\n              </div>\n              {editingStep && (\n                <Button\n                  text=\"\"\n                  type=\"white-solid\"\n                  icon={\n                    <FontAwesomeIcon icon={faTrashAlt} className=\"text-lg\" />\n                  }\n                  fontColorClass=\"text-myRed\"\n                  isSubmitBtn={false}\n                  disabled={isUploading || updateStepMutaionLoading}\n                  onClick={() => {\n                    const isConfirmed = window.confirm(\n                      'You are deleting this step permanently. Are you sure?',\n                    );\n                    isConfirmed &&\n                      deleteStepMutation({\n                        variables: { input: { stepId: editingStep.id } },\n                      });\n                  }}\n                />\n              )}\n            </div>\n          </form>\n        </div>\n      </div>\n    </FormProvider>\n  );\n};\n","/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/partials/Day.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/__generated__/globalTypes.ts",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":2,"column":10,"nodeType":"180","messageId":"181","endLine":2,"endColumn":23},{"ruleId":"178","severity":1,"message":"182","line":3,"column":10,"nodeType":"180","messageId":"181","endLine":3,"endColumn":25},{"ruleId":"178","severity":1,"message":"183","line":91,"column":16,"nodeType":"180","messageId":"181","endLine":91,"endColumn":40},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"@typescript-eslint/no-unused-vars","'faTimesCircle' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","'deleteStepMutaionLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]