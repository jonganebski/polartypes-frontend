[{"/home/jonganebski/github/polartypes-frontend/src/index.tsx":"1","/home/jonganebski/github/polartypes-frontend/src/reportWebVitals.ts":"2","/home/jonganebski/github/polartypes-frontend/src/components/App.tsx":"3","/home/jonganebski/github/polartypes-frontend/src/router/router.tsx":"4","/home/jonganebski/github/polartypes-frontend/src/pages/Home.tsx":"5","/home/jonganebski/github/polartypes-frontend/src/components/Form-error.tsx":"6","/home/jonganebski/github/polartypes-frontend/src/components/Button.tsx":"7","/home/jonganebski/github/polartypes-frontend/src/apollo.ts":"8","/home/jonganebski/github/polartypes-frontend/src/constants.ts":"9","/home/jonganebski/github/polartypes-frontend/src/components/Loading-spinner.tsx":"10","/home/jonganebski/github/polartypes-frontend/src/pages/Trips.tsx":"11","/home/jonganebski/github/polartypes-frontend/src/components/Logo.tsx":"12","/home/jonganebski/github/polartypes-frontend/src/components/Avatar.tsx":"13","/home/jonganebski/github/polartypes-frontend/src/hooks/useGeocoder.ts":"14","/home/jonganebski/github/polartypes-frontend/src/pages/Trip.tsx":"15","/home/jonganebski/github/polartypes-frontend/src/components/Button-add-step.tsx":"16","/home/jonganebski/github/polartypes-frontend/src/helpers.ts":"17","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Signin.tsx":"18","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Signup.tsx":"19","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Set-time-zone.tsx":"20","/home/jonganebski/github/polartypes-frontend/src/components/Cards/Trip.tsx":"21","/home/jonganebski/github/polartypes-frontend/src/components/Cards/Step.tsx":"22","/home/jonganebski/github/polartypes-frontend/src/components/Headers/HomeHeader.tsx":"23","/home/jonganebski/github/polartypes-frontend/src/components/Headers/CommonHeader.tsx":"24","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Background.tsx":"25","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/CloseIcon.tsx":"26","/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Calendar.tsx":"27","/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Clock.tsx":"28","/home/jonganebski/github/polartypes-frontend/src/components/Cards/partials/Comments.tsx":"29","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/FilesArea.tsx":"30","/home/jonganebski/github/polartypes-frontend/src/hooks/useDragNDrop-file.ts":"31","/home/jonganebski/github/polartypes-frontend/src/hooks/useDragNDrop-image.ts":"32","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Save-step.tsx":"33","/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/partials/Day.tsx":"34","/home/jonganebski/github/polartypes-frontend/src/components/Cards/partials/Comment.tsx":"35","/home/jonganebski/github/polartypes-frontend/src/components/Map/Map.tsx":"36","/home/jonganebski/github/polartypes-frontend/src/context.tsx":"37","/home/jonganebski/github/polartypes-frontend/src/__generated__/globalTypes.ts":"38","/home/jonganebski/github/polartypes-frontend/src/components/Trip-status.tsx":"39","/home/jonganebski/github/polartypes-frontend/src/components/Options.tsx":"40","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Settings.tsx":"41","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Profile.tsx":"42","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Account.tsx":"43","/home/jonganebski/github/polartypes-frontend/src/fragments.ts":"44","/home/jonganebski/github/polartypes-frontend/src/hooks/useCalendar.ts":"45","/home/jonganebski/github/polartypes-frontend/src/components/Modals/StepImages.tsx":"46","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateTrip.tsx":"47","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useFollow.tsx":"48","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUnfollow.tsx":"49","/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useTrips.tsx":"50","/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useWhoAmI.tsx":"51","/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useTrip.tsx":"52","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useCreateStep.tsx":"53","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useDeleteStep.tsx":"54","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateStep.tsx":"55","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateAccount.tsx":"56","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Save-trip.tsx":"57","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useDeleteTrip.tsx":"58","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useToggleLike.tsx":"59","/home/jonganebski/github/polartypes-frontend/src/components/Map/partials/Step-route.tsx":"60","/home/jonganebski/github/polartypes-frontend/src/components/Map/partials/Trip-route.tsx":"61","/home/jonganebski/github/polartypes-frontend/src/components/Box/User.tsx":"62","/home/jonganebski/github/polartypes-frontend/src/components/Box/Trip.tsx":"63","/home/jonganebski/github/polartypes-frontend/src/components/Statistics.tsx":"64","/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Search-result.tsx":"65","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Follow-following.tsx":"66","/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useFollowings.tsx":"67"},{"size":897,"mtime":1609724630670,"results":"68","hashOfConfig":"69"},{"size":425,"mtime":1608450751420,"results":"70","hashOfConfig":"69"},{"size":132,"mtime":1608710051560,"results":"71","hashOfConfig":"69"},{"size":1154,"mtime":1609726318820,"results":"72","hashOfConfig":"69"},{"size":4503,"mtime":1610021789630,"results":"73","hashOfConfig":"69"},{"size":195,"mtime":1608536237160,"results":"74","hashOfConfig":"69"},{"size":2139,"mtime":1609334355160,"results":"75","hashOfConfig":"69"},{"size":970,"mtime":1609050512200,"results":"76","hashOfConfig":"69"},{"size":576,"mtime":1609985294220,"results":"77","hashOfConfig":"69"},{"size":480,"mtime":1608870180250,"results":"78","hashOfConfig":"69"},{"size":10246,"mtime":1610009567020,"results":"79","hashOfConfig":"69"},{"size":1289,"mtime":1610020164740,"results":"80","hashOfConfig":"69"},{"size":360,"mtime":1609140998700,"results":"81","hashOfConfig":"69"},{"size":1197,"mtime":1608773922930,"results":"82","hashOfConfig":"69"},{"size":13941,"mtime":1610009561900,"results":"83","hashOfConfig":"69"},{"size":1023,"mtime":1609251094630,"results":"84","hashOfConfig":"69"},{"size":2809,"mtime":1609982410760,"results":"85","hashOfConfig":"69"},{"size":4174,"mtime":1610007315520,"results":"86","hashOfConfig":"69"},{"size":5076,"mtime":1609727138200,"results":"87","hashOfConfig":"69"},{"size":4164,"mtime":1610002921420,"results":"88","hashOfConfig":"69"},{"size":3197,"mtime":1609847260310,"results":"89","hashOfConfig":"69"},{"size":5825,"mtime":1609722157980,"results":"90","hashOfConfig":"69"},{"size":1186,"mtime":1608808312077,"results":"91","hashOfConfig":"69"},{"size":5111,"mtime":1610008658870,"results":"92","hashOfConfig":"69"},{"size":346,"mtime":1608808547467,"results":"93","hashOfConfig":"69"},{"size":591,"mtime":1608808437185,"results":"94","hashOfConfig":"69"},{"size":4893,"mtime":1609671400130,"results":"95","hashOfConfig":"69"},{"size":2888,"mtime":1609645106620,"results":"96","hashOfConfig":"69"},{"size":3902,"mtime":1609721013260,"results":"97","hashOfConfig":"69"},{"size":5526,"mtime":1609112071790,"results":"98","hashOfConfig":"69"},{"size":3944,"mtime":1609112067730,"results":"99","hashOfConfig":"69"},{"size":1692,"mtime":1609112069650,"results":"100","hashOfConfig":"69"},{"size":19425,"mtime":1609721139570,"results":"101","hashOfConfig":"69"},{"size":626,"mtime":1609676019110,"results":"102","hashOfConfig":"69"},{"size":2453,"mtime":1609721019600,"results":"103","hashOfConfig":"69"},{"size":4514,"mtime":1609851448830,"results":"104","hashOfConfig":"69"},{"size":1698,"mtime":1609847370230,"results":"105","hashOfConfig":"69"},{"size":4394,"mtime":1610009537020,"results":"106","hashOfConfig":"69"},{"size":2348,"mtime":1609984982640,"results":"107","hashOfConfig":"69"},{"size":3990,"mtime":1609983287930,"results":"108","hashOfConfig":"69"},{"size":5852,"mtime":1610019902830,"results":"109","hashOfConfig":"69"},{"size":4669,"mtime":1609677481170,"results":"110","hashOfConfig":"69"},{"size":5893,"mtime":1609721096480,"results":"111","hashOfConfig":"69"},{"size":1671,"mtime":1610003794610,"results":"112","hashOfConfig":"69"},{"size":3305,"mtime":1609670887020,"results":"113","hashOfConfig":"69"},{"size":2849,"mtime":1609671672420,"results":"114","hashOfConfig":"69"},{"size":1348,"mtime":1609983225610,"results":"115","hashOfConfig":"69"},{"size":2644,"mtime":1610015993130,"results":"116","hashOfConfig":"69"},{"size":2721,"mtime":1610016978840,"results":"117","hashOfConfig":"69"},{"size":769,"mtime":1610007641430,"results":"118","hashOfConfig":"69"},{"size":580,"mtime":1610007577560,"results":"119","hashOfConfig":"69"},{"size":990,"mtime":1610007631550,"results":"120","hashOfConfig":"69"},{"size":2883,"mtime":1610015619280,"results":"121","hashOfConfig":"69"},{"size":1399,"mtime":1609983163110,"results":"122","hashOfConfig":"69"},{"size":1799,"mtime":1609983215540,"results":"123","hashOfConfig":"69"},{"size":2305,"mtime":1610019878730,"results":"124","hashOfConfig":"69"},{"size":15542,"mtime":1609983260700,"results":"125","hashOfConfig":"69"},{"size":1107,"mtime":1609983168880,"results":"126","hashOfConfig":"69"},{"size":2091,"mtime":1609983187920,"results":"127","hashOfConfig":"69"},{"size":2761,"mtime":1609852191650,"results":"128","hashOfConfig":"69"},{"size":1565,"mtime":1609851821130,"results":"129","hashOfConfig":"69"},{"size":2001,"mtime":1610017899960,"results":"130","hashOfConfig":"69"},{"size":952,"mtime":1610007762170,"results":"131","hashOfConfig":"69"},{"size":4379,"mtime":1609988646240,"results":"132","hashOfConfig":"69"},{"size":4284,"mtime":1610009903480,"results":"133","hashOfConfig":"69"},{"size":2265,"mtime":1610018886920,"results":"134","hashOfConfig":"69"},{"size":512,"mtime":1610012165370,"results":"135","hashOfConfig":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"wm2czq",{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"138"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"138"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"138"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"138"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"138"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"/home/jonganebski/github/polartypes-frontend/src/index.tsx",[],["276","277"],"/home/jonganebski/github/polartypes-frontend/src/reportWebVitals.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/App.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/router/router.tsx",["278"],"import { useReactiveVar } from '@apollo/client';\nimport React, { useEffect } from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport { isLoggedInVar } from '../apollo';\nimport { ModalBackground } from '../components/Modals/partials/Background';\nimport { useWhoAmI } from '../hooks/useQuery/useWhoAmI';\nimport { Home } from '../pages/Home';\nimport { Trip } from '../pages/Trip';\nimport { Trips } from '../pages/Trips';\n\nexport const Router = () => {\n  const isLoggedIn = useReactiveVar(isLoggedInVar);\n  const [lazyWhoAmIQuery, { data: userData }] = useWhoAmI();\n  useEffect(() => {\n    lazyWhoAmIQuery();\n  }, [lazyWhoAmIQuery]);\n  return (\n    <BrowserRouter>\n      <Switch>\n        {isLoggedIn && userData && (\n          <Redirect from=\"/\" to={`/${userData.whoAmI.username}`} exact />\n        )}\n        {!isLoggedIn && (\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n        )}\n        <Route path=\"/:username\" exact>\n          <Trips />\n        </Route>\n        <Route path=\"/:username/:tripId\" exact>\n          <Trip />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n","/home/jonganebski/github/polartypes-frontend/src/pages/Home.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Form-error.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Button.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/apollo.ts",[],"/home/jonganebski/github/polartypes-frontend/src/constants.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/Loading-spinner.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/pages/Trips.tsx",["279"],"import { faUserCheck } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { isLoggedInVar } from '../apollo';\nimport { Avatar } from '../components/Avatar';\nimport { Button } from '../components/Button';\nimport { TripCard } from '../components/Cards/Trip';\nimport { CommonHeader } from '../components/Headers/CommonHeader';\nimport { Map } from '../components/Map/Map';\nimport { FollowFollowing } from '../components/Modals/Follow-following';\nimport { SaveTripModal } from '../components/Modals/Save-trip';\nimport { SetTimeZoneModal } from '../components/Modals/Set-time-zone';\nimport { SigninModal } from '../components/Modals/Signin';\nimport { SignupModal } from '../components/Modals/Signup';\nimport { Options } from '../components/Options';\nimport { Statistics } from '../components/Statistics';\nimport { useFollow } from '../hooks/useMutation/useFollow';\nimport { useUnfollow } from '../hooks/useMutation/useUnfollow';\nimport { useLazyTrips } from '../hooks/useQuery/useTrips';\nimport { useWhoAmI } from '../hooks/useQuery/useWhoAmI';\n\ninterface IPrams {\n  username: string;\n}\n\nexport const Trips = () => {\n  const { username: targetUsername } = useParams<IPrams>();\n  const [isCreateTrip, setIsCreateTrip] = useState(false);\n  const [isSignup, setIsSignup] = useState<boolean | null>(null);\n  const [isOption, setIsOption] = useState(false);\n  const [isAskTimeZone, setIsAskTimeZone] = useState(false);\n  const [isTabTrips, setIsTabTrips] = useState(true);\n  const [isFollowersModal, setIsFollowersModal] = useState<boolean | null>(\n    null,\n  );\n\n  const [lazyWhoAmIQuery, { data: userData }] = useWhoAmI();\n  const [lazyTripsQuery, { data, called, loading }] = useLazyTrips();\n  useEffect(() => {\n    lazyWhoAmIQuery();\n  }, [lazyWhoAmIQuery]);\n  useEffect(() => {\n    console.log('foo');\n    lazyTripsQuery({ variables: { input: { targetUsername } } });\n  }, [lazyTripsQuery, targetUsername]);\n\n  const [followMutation] = useFollow();\n  const [unfollowMutation] = useUnfollow();\n  const isSelf = targetUsername.toLowerCase() === userData?.whoAmI.slug;\n\n  if (loading) {\n    return (\n      <Helmet>\n        <title>Loading... | Polartypes</title>\n      </Helmet>\n    );\n  }\n  if (!loading && called && !data?.readTrips.targetUser) {\n    return <Redirect to=\"/\" />;\n  }\n  if (!data?.readTrips.targetUser) {\n    return null;\n  }\n  return (\n    <div>\n      {isCreateTrip && userData?.whoAmI.timeZone && (\n        <SaveTripModal\n          userData={userData}\n          setIsCreateTrip={setIsCreateTrip}\n          trips={data?.readTrips.targetUser?.trips}\n        />\n      )}\n      {isAskTimeZone && (\n        <SetTimeZoneModal\n          setIsAskTimeZone={setIsAskTimeZone}\n          setIsCreateTrip={setIsCreateTrip}\n        />\n      )}\n      <Options\n        userData={userData}\n        isOption={isOption}\n        setIsOption={setIsOption}\n      />\n      <Helmet>\n        <title>\n          {data.readTrips.targetUser.firstName}'s trips` | Polartypes\n        </title>\n      </Helmet>\n      <CommonHeader\n        userData={userData}\n        setIsSignup={setIsSignup}\n        setIsOption={setIsOption}\n      />\n      {isSignup === false && <SigninModal setIsSignup={setIsSignup} />}\n      {isSignup === true && <SignupModal setIsSignup={setIsSignup} />}\n      {userData && isFollowersModal === false && (\n        <FollowFollowing\n          isFollowers={false}\n          currentUserId={userData.whoAmI.id}\n          users={data.readTrips.targetUser.followings}\n          setIsFollowersModal={setIsFollowersModal}\n        />\n      )}\n      {userData && isFollowersModal === true && (\n        <FollowFollowing\n          isFollowers={true}\n          currentUserId={userData.whoAmI.id}\n          users={data.readTrips.targetUser.followers}\n          setIsFollowersModal={setIsFollowersModal}\n        />\n      )}\n      {data.readTrips.error ? (\n        <div>{data.readTrips.error}</div>\n      ) : (\n        <main className=\"h-screenExceptHeader grid grid-cols-tripsPage\">\n          <section className=\"overflow-y-scroll\">\n            <div className=\"relative p-5 flex flex-col items-center\">\n              <div\n                style={{\n                  backgroundImage:\n                    'url(\"andreas-gucklhorn-mawU2PoJWfU-unsplash.jpg\")',\n                  filter: 'blur(2px)',\n                  zIndex: -2,\n                }}\n                className=\"absolute top-0 w-full h-full bg-cover bg-center\"\n              ></div>\n              <div\n                style={{ zIndex: -1 }}\n                className=\"absolute top-0 w-full h-full bg-myGreen-darkest opacity-80\"\n              ></div>\n              <Avatar\n                avatarUrl={data?.readTrips.targetUser?.avatarUrl ?? null}\n                size={16}\n              />\n              <h2 className=\"mt-2 mb-1 text-white text-xl font-semibold\">\n                {data?.readTrips.targetUser?.firstName}{' '}\n                {data?.readTrips.targetUser?.lastName}\n              </h2>\n              <h6 className=\"mb-3 text-myGray-dark text-xs\">\n                {data?.readTrips.targetUser?.city ?? 'Somewhere in the world'}\n              </h6>\n              {data?.readTrips.targetUser?.about && (\n                <p className=\"mb-3 text-white text-sm text-center\">\n                  {data?.readTrips.targetUser.about}\n                </p>\n              )}\n              <div className=\"mt-4\">\n                <Button\n                  text={`${\n                    data?.readTrips.targetUser?.followers.length === 1\n                      ? data?.readTrips.targetUser?.followers.length +\n                        ' follower'\n                      : data?.readTrips.targetUser?.followers.length +\n                        ' followers'\n                  }`}\n                  type=\"white-regular\"\n                  size=\"sm\"\n                  className=\"mr-2\"\n                  onClick={() => userData && setIsFollowersModal(true)}\n                />\n                <Button\n                  text={`${data?.readTrips.targetUser?.followings.length} following`}\n                  type=\"white-regular\"\n                  size=\"sm\"\n                  onClick={() => userData && setIsFollowersModal(false)}\n                />\n                {isLoggedInVar() &&\n                  !isSelf &&\n                  !data.readTrips.targetUser?.followers.some(\n                    (user) => user.id === userData?.whoAmI.id,\n                  ) && (\n                    <Button\n                      text=\"Follow\"\n                      type=\"void\"\n                      className=\"text-white border border-myBlue ml-2 hover:bg-myBlue active:bg-myBlue-dark\"\n                      size=\"sm\"\n                      onClick={() => {\n                        data.readTrips.targetUser &&\n                          followMutation({\n                            variables: {\n                              input: { id: data.readTrips.targetUser.id },\n                            },\n                          });\n                      }}\n                    />\n                  )}\n                {!isSelf &&\n                  data.readTrips.targetUser?.followers.some(\n                    (user) => user.id === userData?.whoAmI.id,\n                  ) && (\n                    <Button\n                      text=\"\"\n                      type=\"blue-solid\"\n                      size=\"sm\"\n                      className=\"ml-2\"\n                      icon={<FontAwesomeIcon icon={faUserCheck} />}\n                      onClick={() => {\n                        data.readTrips.targetUser &&\n                          unfollowMutation({\n                            variables: {\n                              input: { id: data.readTrips.targetUser.id },\n                            },\n                          });\n                      }}\n                    />\n                  )}\n              </div>\n            </div>\n            <div className=\"bg-gradient-to-br from-myBlue to-myBlue-light\">\n              <button\n                className={`w-1/2 py-4 text-white font-semibold ${\n                  !isTabTrips && 'opacity-50'\n                } focus:outline-none`}\n                onClick={() => setIsTabTrips(true)}\n              >\n                Trips\n              </button>\n              <button\n                className={`w-1/2 py-4 text-white ${\n                  isTabTrips && 'opacity-50'\n                } font-semibold focus:outline-none`}\n                onClick={() => setIsTabTrips(false)}\n              >\n                Statistics\n              </button>\n            </div>\n            <div className={`${isTabTrips ? '' : 'hidden'} px-3 py-5`}>\n              <div className=\"w-full mb-5 flex justify-center\">\n                {isSelf && (\n                  <Button\n                    text=\"Add a past, current or future trip\"\n                    type=\"blue-regular\"\n                    size=\"sm\"\n                    onClick={() => {\n                      userData?.whoAmI.timeZone\n                        ? setIsCreateTrip(true)\n                        : setIsAskTimeZone(true);\n                    }}\n                  />\n                )}\n              </div>\n              <ul className=\"grid gap-y-3\">\n                {data?.readTrips.targetUser?.trips\n                  .slice()\n                  .sort(\n                    (a, b) =>\n                      new Date(b.startDate).getTime() -\n                      new Date(a.startDate).getTime(),\n                  )\n                  .map((trip, i) => (\n                    <TripCard\n                      key={i}\n                      targetUsername={targetUsername}\n                      trip={trip}\n                    />\n                  ))}\n              </ul>\n            </div>\n            <Statistics\n              isSelf={isSelf}\n              isHidden={isTabTrips}\n              trips={data.readTrips.targetUser.trips}\n            />\n          </section>\n          <section className=\"relative z-0 h-screenExceptHeader\">\n            {/* <Map /> */}\n          </section>\n        </main>\n      )}\n    </div>\n  );\n};\n","/home/jonganebski/github/polartypes-frontend/src/components/Logo.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Avatar.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useGeocoder.ts",[],"/home/jonganebski/github/polartypes-frontend/src/pages/Trip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Button-add-step.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/helpers.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Signin.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Signup.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Set-time-zone.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Cards/Trip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Cards/Step.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Headers/HomeHeader.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Headers/CommonHeader.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Background.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/CloseIcon.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Calendar.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Clock.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Cards/partials/Comments.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/FilesArea.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useDragNDrop-file.ts",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useDragNDrop-image.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Save-step.tsx",["280"],"import {\n  faCalendar,\n  faClock,\n  faTrashAlt,\n} from '@fortawesome/free-regular-svg-icons';\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport moment from 'moment';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { deleteFiles, getTimeZone } from '../../helpers';\nimport { useCreateStep } from '../../hooks/useMutation/useCreateStep';\nimport { useDeleteStep } from '../../hooks/useMutation/useDeleteStep';\nimport { useGeocoder } from '../../hooks/useGeocoder';\nimport { useUpdateStep } from '../../hooks/useMutation/useUpdateStep';\nimport { readTripQuery_readTrip_trip_steps } from '../../__generated__/readTripQuery';\nimport { Button } from '../Button';\nimport { Clock } from '../Tooltips/Clock';\nimport { NewCalendar } from '../Tooltips/Calendar';\nimport { ModalCloseIcon } from './partials/CloseIcon';\nimport { FilesArea } from './partials/FilesArea';\nimport { ICreateStepFormProps } from '../../pages/Trip';\n\ninterface ISaveStepModalProps {\n  tripId: string;\n  tripStartDate: string;\n  tripEndDate: string | null;\n  belowStepDate: string;\n  setIsSaveStepModal: React.Dispatch<React.SetStateAction<boolean>>;\n  editingStep: readTripQuery_readTrip_trip_steps | null;\n}\n\nexport type TImage = { id?: string; src?: string; url?: string };\n\nexport const SaveStepModal: React.FC<ISaveStepModalProps> = ({\n  tripId,\n  tripStartDate,\n  tripEndDate,\n  belowStepDate,\n  setIsSaveStepModal,\n  editingStep,\n}) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n  const [isLocationBlock, setIsLocationBlock] = useState(false);\n  const [uploadErr, setUploadErr] = useState('');\n  const [isPopupCalendar, setIsPopupCalendar] = useState<boolean | null>(null);\n  const [images, setImages] = useState<TImage[]>(\n    editingStep?.imgUrls?.map((url) => ({ url })) ?? [],\n  );\n  const [imagesRecord, setImagesRecord] = useState<TImage[]>(images);\n  const f = useFormContext<ICreateStepFormProps>();\n  const { setValue, getValues, handleSubmit, register, watch, formState } = f;\n  const [\n    createStepMutation,\n    { loading: createStepMutationLoading },\n  ] = useCreateStep(f, tripId, images, setIsSaveStepModal);\n\n  const [\n    updateStepMutation,\n    { loading: updateStepMutaionLoading },\n  ] = useUpdateStep(f, editingStep, images, setIsSaveStepModal);\n\n  const [\n    deleteStepMutation,\n    { loading: deleteStepMutaionLoading },\n  ] = useDeleteStep(f, tripId, images, setIsSaveStepModal);\n\n  const { geocodeData, setGeocodeData } = useGeocoder(searchTerm);\n\n  const onLocationChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.currentTarget.value);\n  };\n\n  const cleanupUnusedImageFilesOnCancel = useCallback(() => {\n    if (imagesRecord.length === 0 || !imagesRecord.some((image) => image.url)) {\n      return;\n    }\n    const urls: string[] = [];\n    if (editingStep) {\n      imagesRecord.forEach((image) => {\n        if (!image.url) {\n          return;\n        }\n        const isUsedImage = editingStep.imgUrls?.some(\n          (url) => url === image.url,\n        );\n        if (!isUsedImage) {\n          urls.push(image.url);\n        }\n      });\n    } else {\n      imagesRecord.forEach((image) => image.url && urls.push(image.url));\n    }\n    urls.length !== 0 && deleteFiles(urls);\n  }, [editingStep, imagesRecord]);\n\n  const cleanupUnusedImageFilesOnEditSubmit = () => {\n    if (imagesRecord.length === 0 || !imagesRecord.some((image) => image.url)) {\n      return;\n    }\n    const urls: string[] = [];\n    imagesRecord.forEach((image) => {\n      if (!image.url) {\n        return;\n      }\n      const isUsedImage = images.some((img) => img.url === image.url);\n      if (!isUsedImage) {\n        urls.push(image.url);\n      }\n    });\n    urls.length !== 0 && deleteFiles(urls);\n  };\n\n  const onSubmit = () => {\n    const { lat, lon, ...values } = getValues();\n    const imgUrls = images.reduce((acc, img) => {\n      if (img.url) {\n        return [...acc, img.url];\n      } else {\n        return acc;\n      }\n    }, [] as string[]);\n    if (editingStep) {\n      cleanupUnusedImageFilesOnEditSubmit();\n      updateStepMutation({\n        variables: {\n          input: {\n            ...values,\n            stepId: editingStep.id,\n            lat: +lat,\n            lon: +lon,\n            imgUrls,\n          },\n        },\n      });\n    } else {\n      createStepMutation({\n        variables: {\n          input: {\n            ...values,\n            tripId: +tripId,\n            lat: +lat,\n            lon: +lon,\n            imgUrls,\n          },\n        },\n      });\n    }\n  };\n\n  const onModalClose = useCallback(() => {\n    if (isUploading) {\n      return;\n    }\n    cleanupUnusedImageFilesOnCancel();\n    setIsSaveStepModal(false);\n  }, [cleanupUnusedImageFilesOnCancel, isUploading, setIsSaveStepModal]);\n\n  useEffect(() => {\n    window.addEventListener('beforeunload', cleanupUnusedImageFilesOnCancel);\n    return () =>\n      window.removeEventListener(\n        'beforeunload',\n        cleanupUnusedImageFilesOnCancel,\n      );\n  }, [cleanupUnusedImageFilesOnCancel]);\n\n  useEffect(() => {\n    if (editingStep) {\n      setValue('arrivedAt', editingStep.arrivedAt, { shouldValidate: true });\n      setValue('country', editingStep.country, { shouldValidate: true });\n      setValue('lat', editingStep.lat.toString(), { shouldValidate: true });\n      setValue('lon', editingStep.lon.toString(), { shouldValidate: true });\n      setValue('location', editingStep.location, { shouldValidate: true });\n      setValue('name', editingStep.name, { shouldValidate: true });\n      setValue('story', editingStep.story ?? '', { shouldValidate: true });\n      setValue('timeZone', editingStep.timeZone, { shouldValidate: true });\n    } else {\n      setValue('arrivedAt', belowStepDate, { shouldValidate: true });\n    }\n  }, [belowStepDate, editingStep, setValue]);\n  return (\n    <>\n      <div className=\"absolute z-50 top-0 left-0 w-full h-full bg-myGreen-darkest bg-opacity-80\"></div>\n      <div className=\"absolute z-50 top-0 left-0 w-full h-screenExceptHeader overflow-y-scroll\">\n        <div className=\"absolute top-2 left-1/2 transform -translate-x-1/2 w-11/12 bg-white rounded-2xl\">\n          <ModalCloseIcon onClick={onModalClose} />\n          <div className=\"py-6 text-center text-2xl text-myGreen-darkest font-semibold border-b\">\n            {editingStep ? 'Edit step' : 'New Trip'}\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)} className=\"p-6\">\n            <section className=\"relative p-6 mb-4 grid grid-cols-oneToTwo bg-myGray-dark rounded-2xl\">\n              <div>\n                <h3 className=\"text-white font-semibold\">Location</h3>\n                <span className=\"block text-sm font-medium text-myGray-light\">\n                  Search\n                </span>\n                <span className=\"text-sm font-medium text-myGray-light\">\n                  or click the map\n                </span>\n              </div>\n              <div className=\"rounded-sm\">\n                <div className=\"relative\">\n                  <input\n                    onChange={onLocationChange}\n                    ref={register({ required: true })}\n                    name=\"location\"\n                    placeholder=\"Enter a location\"\n                    autoComplete=\"off\"\n                    className=\"input w-full border-transparent rounded-b-none\"\n                  />\n                  <div className=\"absolute z-10 w-full flex flex-col bg-white\">\n                    {geocodeData?.map((d: any, i: number) => {\n                      return (\n                        <div\n                          key={i}\n                          onClick={async () => {\n                            const lat = (+d.point?.lat)?.toFixed(6);\n                            const lon = (+d.point?.lng)?.toFixed(6);\n                            setValue('location', d.name, {\n                              shouldValidate: true,\n                            });\n                            setValue('lat', lat, { shouldValidate: true });\n                            setValue('lon', lon, { shouldValidate: true });\n                            setValue('country', d.country, {\n                              shouldValidate: true,\n                            });\n                            setGeocodeData(null);\n                          }}\n                          className=\"px-4 py-2 cursor-pointer text-sm hover:bg-myGray-lightest\"\n                        >\n                          <span className=\"mr-2\">{d.name}</span>\n                          <span className=\"text-myGray\">{d.country}</span>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n                <div className=\"p-2 pl-4 flex bg-white text-myGray-darkest text-sm\">\n                  <div className=\"flex items-center border-r border-myGray-light\">\n                    <span className=\"font-semibold\">Lat:</span>\n                    <input\n                      ref={register({ required: true })}\n                      name=\"lat\"\n                      placeholder=\"00,000000\"\n                      className=\"ml-1 w-full focus:outline-none\"\n                    />\n                  </div>\n                  <div className=\"pl-4 flex items-center\">\n                    <span className=\"font-semibold\">Lon:</span>\n                    <input\n                      ref={register({ required: true })}\n                      name=\"lon\"\n                      placeholder=\"00,000000\"\n                      className=\"ml-1 w-full focus:outline-none\"\n                    />\n                  </div>\n                  <div\n                    onClick={async () => {\n                      const { location, lat, lon } = getValues();\n                      if (location && lat && lon) {\n                        const { ok, error, timeZone } = await getTimeZone(\n                          lat,\n                          lon,\n                        );\n                        if (ok && !error && timeZone) {\n                          setValue('timeZone', timeZone);\n                        }\n                        setIsLocationBlock(true);\n                      }\n                    }}\n                    className=\"py-1.5 px-4 rounded-full bg-myBlue text-white cursor-pointer\"\n                  >\n                    Set\n                  </div>\n                </div>\n              </div>\n              {isLocationBlock && (\n                <div\n                  onClick={() => {\n                    setIsLocationBlock((prev) => !prev);\n                  }}\n                  className=\"absolute top-0 left-0 w-full h-full p-3 rounded-2xl text-sm bg-white bg-opacity-80 cursor-pointer group hover:bg-myBlue hover:bg-opacity-80\"\n                >\n                  <div className=\"text-transparent group-hover:text-white\">\n                    <FontAwesomeIcon icon={faPencilAlt} className=\"mr-2\" />\n                    <span>Edit info</span>\n                  </div>\n                </div>\n              )}\n            </section>\n            <section className=\"relative p-6 mb-6 grid grid-cols-oneToTwo gap-y-4 rounded-2xl shadow-surround\">\n              <h3 className=\"flex items-center text-myGreen-darkest font-semibold\">\n                Step name\n              </h3>\n              <div className=\"flex\">\n                <input\n                  ref={register({ required: true })}\n                  name=\"name\"\n                  placeholder=\"-\"\n                  className=\"input w-full rounded-r-none\"\n                />\n                <input\n                  ref={register({ required: true })}\n                  name=\"country\"\n                  readOnly\n                  style={{\n                    width: watch('country')?.length + 2 + 'ch',\n                  }}\n                  className=\"px-2 py-3 w-0 text-myGray-dark border border-l-0 border-myGray bg-myGray-light rounded-r-md rounded-l-none focus:outline-none\"\n                />\n              </div>\n              <h3 className=\"flex items-center text-myGreen-darkest font-semibold\">\n                Arrival Date & Time\n              </h3>\n              <div className=\"flex\">\n                <input\n                  ref={register({ required: true })}\n                  name=\"arrivedAt\"\n                  className=\"hidden\"\n                  readOnly\n                />\n                <div\n                  className={`relative mr-3 w-full border border-solid rounded-sm cursor-pointer focus:outline-none ${\n                    isPopupCalendar ? 'border-myBlue' : 'border-myGray'\n                  }`}\n                >\n                  <div\n                    className=\"px-4 py-3 flex items-center justify-between\"\n                    onClick={() =>\n                      setIsPopupCalendar((prev) => (prev ? null : true))\n                    }\n                  >\n                    <span>\n                      {getValues().arrivedAt && getValues().timeZone\n                        ? moment\n                            .tz(watch('arrivedAt'), watch('timeZone'))\n                            .format('MMM D YYYY')\n                        : ''}\n                    </span>\n                    <FontAwesomeIcon\n                      icon={faCalendar}\n                      className=\"text-myBlue text-xl\"\n                    />\n                  </div>\n                  {isPopupCalendar && getValues('timeZone') && (\n                    <NewCalendar\n                      name=\"arrivedAt\"\n                      timeZone={getValues('timeZone')}\n                      selectedDate={getValues('arrivedAt')}\n                      effectiveSince={tripStartDate}\n                      effectiveUntil={\n                        tripEndDate\n                          ? moment(tripEndDate).add(1, 'days').format()\n                          : null\n                      }\n                    />\n                  )}\n                </div>\n                <div\n                  className={`relative px-4 py-3 border border-solid rounded-sm cursor-pointer ${\n                    isPopupCalendar === false\n                      ? 'border-myBlue'\n                      : 'border-myGray'\n                  }`}\n                >\n                  <div\n                    onClick={() =>\n                      setIsPopupCalendar((prev) =>\n                        prev === false ? null : false,\n                      )\n                    }\n                    className=\"mr-3 w-full flex items-center justify-between whitespace-nowrap\"\n                  >\n                    <span>\n                      {getValues().arrivedAt && getValues().timeZone\n                        ? moment\n                            .tz(watch('arrivedAt'), watch('timeZone'))\n                            .format('HH : mm')\n                        : ''}\n                    </span>\n                    <FontAwesomeIcon\n                      icon={faClock}\n                      className=\"text-myBlue text-xl\"\n                    />\n                  </div>\n                  {isPopupCalendar === false && (\n                    <Clock timeZone={watch('timeZone')} />\n                  )}\n                  <input\n                    ref={register()}\n                    name=\"timeZone\"\n                    readOnly\n                    className=\"hidden\"\n                  />\n                </div>\n              </div>\n              <h3 className=\"mt-3 text-myGreen-darkest font-semibold\">\n                Your story\n              </h3>\n              <textarea\n                ref={register()}\n                name=\"story\"\n                placeholder=\"What have you been up to?\"\n                className=\"resize-none px-4 py-3 h-48 border border-myGray rounded-sm focus:outline-none focus:border-myBlue\"\n              />\n              <h3 className=\"flex flex-col justify-center text-myGreen-darkest font-semibold\">\n                Add your photos\n                <span className=\"text-sm font-medium text-myGray-dark\">\n                  Drag'n drop to re-arrange\n                </span>\n              </h3>\n              <FilesArea\n                images={images}\n                setImages={setImages}\n                setImagesRecord={setImagesRecord}\n                isUploading={isUploading}\n                setIsUploading={setIsUploading}\n                uploadErr={uploadErr}\n                setUploadErr={setUploadErr}\n                editingStep={editingStep}\n              />\n              {!isLocationBlock && (\n                <div\n                  onClick={() => {\n                    const {\n                      location,\n                      lat,\n                      lon,\n                      country,\n                      timeZone,\n                    } = getValues();\n                    if (location && lat && lon && country && timeZone) {\n                      setIsLocationBlock((prev) => !prev);\n                    }\n                  }}\n                  className=\"absolute top-0 left-0 w-full h-full p-3 rounded-2xl text-sm bg-white bg-opacity-80 cursor-pointer group hover:bg-myBlue hover:bg-opacity-80\"\n                >\n                  <div className=\"text-transparent group-hover:text-white\">\n                    <FontAwesomeIcon icon={faPencilAlt} className=\"mr-2\" />\n                    <span>Edit info</span>\n                  </div>\n                </div>\n              )}\n            </section>\n            <div className=\"flex justify-between\">\n              <div>\n                <Button\n                  text={editingStep ? 'Save changes' : 'Add step'}\n                  type=\"red-solid\"\n                  loading={\n                    createStepMutationLoading || updateStepMutaionLoading\n                  }\n                  disabled={\n                    !formState.isValid ||\n                    isUploading ||\n                    createStepMutationLoading ||\n                    updateStepMutaionLoading\n                  }\n                  className=\"mr-4\"\n                />\n                <Button\n                  text=\"Cancel\"\n                  type=\"white-solid\"\n                  isSubmitBtn={false}\n                  disabled={\n                    isUploading ||\n                    createStepMutationLoading ||\n                    updateStepMutaionLoading\n                  }\n                  onClick={onModalClose}\n                />\n              </div>\n              {editingStep && (\n                <Button\n                  text=\"\"\n                  type=\"white-solid\"\n                  icon={\n                    <FontAwesomeIcon icon={faTrashAlt} className=\"text-lg\" />\n                  }\n                  fontColorClass=\"text-myRed\"\n                  isSubmitBtn={false}\n                  disabled={isUploading || updateStepMutaionLoading}\n                  onClick={() => {\n                    const isConfirmed = window.confirm(\n                      'You are deleting this step permanently. Are you sure?',\n                    );\n                    isConfirmed &&\n                      deleteStepMutation({\n                        variables: { input: { stepId: editingStep.id } },\n                      });\n                  }}\n                />\n              )}\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n","/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/partials/Day.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Cards/partials/Comment.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Map/Map.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/context.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/__generated__/globalTypes.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/Trip-status.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Options.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Settings.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Profile.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Account.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/fragments.ts",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useCalendar.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/StepImages.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateTrip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useFollow.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUnfollow.tsx",["281","282"],"import { gql, useMutation } from '@apollo/client';\nimport { useEffect } from 'react';\nimport { client } from '../../apollo';\nimport {\n  readFollowersQuery,\n  readFollowersQueryVariables,\n} from '../../__generated__/readFollowersQuery';\nimport {\n  readFollowingsQuery,\n  readFollowingsQueryVariables,\n} from '../../__generated__/readFollowingsQuery';\nimport { targetUser } from '../../__generated__/targetUser';\nimport {\n  unfollowMutation,\n  unfollowMutationVariables,\n} from '../../__generated__/unfollowMutation';\nimport { READ_FOLLOWINGS } from '../useQuery/useFollowings';\nimport { useWhoAmI } from '../useQuery/useWhoAmI';\n\nconst UNFOLLOW_MUTATION = gql`\n  mutation unfollowMutation($input: UnfollowInput!) {\n    unfollow(input: $input) {\n      ok\n      error\n      targetUserId\n    }\n  }\n`;\n\nexport const useUnfollow = () => {\n  const [lazyWhoAmIQuery, { data: userData }] = useWhoAmI();\n  useEffect(() => {\n    lazyWhoAmIQuery();\n  }, [lazyWhoAmIQuery]);\n  const onCompleted = (data: unfollowMutation) => {\n    const {\n      unfollow: { ok, error, targetUserId },\n    } = data;\n    if (ok && !error && targetUserId && userData) {\n      const targetUser = client.readFragment<targetUser>({\n        id: `Users:${targetUserId}`,\n        fragment: gql`\n          fragment targetUser on Users {\n            followers {\n              id\n            }\n          }\n        `,\n      });\n      targetUser &&\n        client.writeFragment<targetUser>({\n          id: `Users:${targetUserId}`,\n          fragment: gql`\n            fragment targetUser on Users {\n              followers {\n                id\n              }\n            }\n          `,\n          data: {\n            __typename: 'Users',\n            followers: targetUser.followers.filter(\n              (follower) => follower.id !== userData.whoAmI.id,\n            ),\n          },\n        });\n      const prevQuery = client.readQuery<\n        readFollowingsQuery,\n        readFollowingsQueryVariables\n      >({\n        query: READ_FOLLOWINGS,\n        variables: { input: { targetUserId: userData.whoAmI.id } },\n      });\n      prevQuery &&\n        prevQuery.readFollowings.followings &&\n        client.writeQuery<readFollowingsQuery, readFollowingsQueryVariables>({\n          query: READ_FOLLOWINGS,\n          variables: { input: { targetUserId: userData.whoAmI.id } },\n          data: {\n            readFollowings: {\n              ...prevQuery.readFollowings,\n              followings: prevQuery.readFollowings.followings.filter(\n                (f) => f.id !== targetUserId,\n              ),\n            },\n          },\n        });\n    }\n  };\n  return useMutation<unfollowMutation, unfollowMutationVariables>(\n    UNFOLLOW_MUTATION,\n    { onCompleted },\n  );\n};\n","/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useTrips.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useWhoAmI.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useTrip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useCreateStep.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useDeleteStep.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateStep.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateAccount.tsx",["283"],"import { gql, useMutation } from '@apollo/client';\nimport { useEffect, useState } from 'react';\nimport { UseFormMethods } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport { client } from '../../apollo';\nimport { ISettingsFormProps } from '../../components/Modals/Settings';\nimport { USER_FRAGMENT } from '../../fragments';\nimport { deleteFiles, sleep } from '../../helpers';\nimport {\n  updateAccountMutation,\n  updateAccountMutationVariables,\n} from '../../__generated__/updateAccountMutation';\nimport { UserParts } from '../../__generated__/UserParts';\nimport { useWhoAmI } from '../useQuery/useWhoAmI';\n\nexport const UPDATE_ACCOUNT_MUTATION = gql`\n  mutation updateAccountMutation($input: UpdateAccountInput!) {\n    updateAccount(input: $input) {\n      ok\n      error\n    }\n  }\n`;\n\nexport const useUpdateAccount = (\n  f: UseFormMethods<ISettingsFormProps>,\n  avatarUrl: string | null,\n) => {\n  const [lazyWhoAmIQuery, { data: userData }] = useWhoAmI();\n  useEffect(() => {\n    lazyWhoAmIQuery();\n  }, [lazyWhoAmIQuery]);\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const onCompleted = async (data: updateAccountMutation) => {\n    const {\n      updateAccount: { ok, error },\n    } = data;\n    if (ok && !error && userData) {\n      const {\n        about,\n        city,\n        firstName,\n        lastName,\n        username,\n        timeZone,\n      } = f.getValues();\n      client.writeFragment<UserParts>({\n        id: `Users:${userData.whoAmI.id}`,\n        fragment: USER_FRAGMENT,\n        fragmentName: 'UserParts',\n        data: {\n          __typename: 'Users',\n          id: userData.whoAmI.id,\n          about,\n          avatarUrl,\n          city,\n          firstName,\n          lastName,\n          timeZone,\n          username,\n          slug: username.toLowerCase(),\n        },\n      });\n      await sleep(2000);\n      if (userData.whoAmI.username !== username) {\n        history.push(`/${username}`);\n      } else {\n        setIsLoading(false);\n      }\n    } else {\n      setIsLoading(false);\n    }\n  };\n  const [updateAccountMutation] = useMutation<\n    updateAccountMutation,\n    updateAccountMutationVariables\n  >(UPDATE_ACCOUNT_MUTATION, { onCompleted });\n\n  return { updateAccountMutation, isLoading, setIsLoading };\n};\n","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Save-trip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useDeleteTrip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useToggleLike.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Map/partials/Step-route.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Map/partials/Trip-route.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Box/User.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Box/Trip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Statistics.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Search-result.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Follow-following.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useFollowings.tsx",[],{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","severity":1,"message":"289","line":5,"column":10,"nodeType":"290","messageId":"291","endLine":5,"endColumn":25},{"ruleId":"288","severity":1,"message":"292","line":11,"column":10,"nodeType":"290","messageId":"291","endLine":11,"endColumn":13},{"ruleId":"288","severity":1,"message":"293","line":66,"column":16,"nodeType":"290","messageId":"291","endLine":66,"endColumn":40},{"ruleId":"288","severity":1,"message":"294","line":5,"column":3,"nodeType":"290","messageId":"291","endLine":5,"endColumn":21},{"ruleId":"288","severity":1,"message":"295","line":6,"column":3,"nodeType":"290","messageId":"291","endLine":6,"endColumn":30},{"ruleId":"288","severity":1,"message":"296","line":8,"column":10,"nodeType":"290","messageId":"291","endLine":8,"endColumn":21},"no-native-reassign",["297"],"no-negated-in-lhs",["298"],"@typescript-eslint/no-unused-vars","'ModalBackground' is defined but never used.","Identifier","unusedVar","'Map' is defined but never used.","'deleteStepMutaionLoading' is assigned a value but never used.","'readFollowersQuery' is defined but never used.","'readFollowersQueryVariables' is defined but never used.","'deleteFiles' is defined but never used.","no-global-assign","no-unsafe-negation"]