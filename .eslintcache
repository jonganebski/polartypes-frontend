[{"/home/jonganebski/github/polartypes-frontend/src/index.tsx":"1","/home/jonganebski/github/polartypes-frontend/src/reportWebVitals.ts":"2","/home/jonganebski/github/polartypes-frontend/src/components/App.tsx":"3","/home/jonganebski/github/polartypes-frontend/src/router/router.tsx":"4","/home/jonganebski/github/polartypes-frontend/src/pages/Home.tsx":"5","/home/jonganebski/github/polartypes-frontend/src/components/Form-error.tsx":"6","/home/jonganebski/github/polartypes-frontend/src/components/Button.tsx":"7","/home/jonganebski/github/polartypes-frontend/src/constants.ts":"8","/home/jonganebski/github/polartypes-frontend/src/components/Loading-spinner.tsx":"9","/home/jonganebski/github/polartypes-frontend/src/pages/Trips.tsx":"10","/home/jonganebski/github/polartypes-frontend/src/components/Logo.tsx":"11","/home/jonganebski/github/polartypes-frontend/src/components/Avatar.tsx":"12","/home/jonganebski/github/polartypes-frontend/src/hooks/useGeocoder.ts":"13","/home/jonganebski/github/polartypes-frontend/src/pages/Trip.tsx":"14","/home/jonganebski/github/polartypes-frontend/src/components/Button-add-step.tsx":"15","/home/jonganebski/github/polartypes-frontend/src/helpers.ts":"16","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Signin.tsx":"17","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Signup.tsx":"18","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Set-time-zone.tsx":"19","/home/jonganebski/github/polartypes-frontend/src/components/Cards/Trip.tsx":"20","/home/jonganebski/github/polartypes-frontend/src/components/Cards/Step.tsx":"21","/home/jonganebski/github/polartypes-frontend/src/components/Headers/HomeHeader.tsx":"22","/home/jonganebski/github/polartypes-frontend/src/components/Headers/CommonHeader.tsx":"23","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Background.tsx":"24","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/CloseIcon.tsx":"25","/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Calendar.tsx":"26","/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Clock.tsx":"27","/home/jonganebski/github/polartypes-frontend/src/components/Cards/partials/Comments.tsx":"28","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/FilesArea.tsx":"29","/home/jonganebski/github/polartypes-frontend/src/hooks/useDragNDrop-file.ts":"30","/home/jonganebski/github/polartypes-frontend/src/hooks/useDragNDrop-image.ts":"31","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Save-step.tsx":"32","/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/partials/Day.tsx":"33","/home/jonganebski/github/polartypes-frontend/src/components/Cards/partials/Comment.tsx":"34","/home/jonganebski/github/polartypes-frontend/src/components/Map/Map.tsx":"35","/home/jonganebski/github/polartypes-frontend/src/context.tsx":"36","/home/jonganebski/github/polartypes-frontend/src/components/Trip-status.tsx":"37","/home/jonganebski/github/polartypes-frontend/src/components/Options.tsx":"38","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Settings.tsx":"39","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Profile.tsx":"40","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Account.tsx":"41","/home/jonganebski/github/polartypes-frontend/src/fragments.ts":"42","/home/jonganebski/github/polartypes-frontend/src/hooks/useCalendar.ts":"43","/home/jonganebski/github/polartypes-frontend/src/components/Modals/StepImages.tsx":"44","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateTrip.tsx":"45","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useFollow.tsx":"46","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUnfollow.tsx":"47","/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useTrips.tsx":"48","/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useWhoAmI.tsx":"49","/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useTrip.tsx":"50","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useCreateStep.tsx":"51","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useDeleteStep.tsx":"52","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateStep.tsx":"53","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateAccount.tsx":"54","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Save-trip.tsx":"55","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useDeleteTrip.tsx":"56","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useToggleLike.tsx":"57","/home/jonganebski/github/polartypes-frontend/src/components/Map/partials/Trip-route.tsx":"58","/home/jonganebski/github/polartypes-frontend/src/components/Box/User.tsx":"59","/home/jonganebski/github/polartypes-frontend/src/components/Box/Trip.tsx":"60","/home/jonganebski/github/polartypes-frontend/src/components/Statistics.tsx":"61","/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Search-result.tsx":"62","/home/jonganebski/github/polartypes-frontend/src/components/Modals/Follow-following.tsx":"63","/home/jonganebski/github/polartypes-frontend/src/components/Map/partials/Step-markers.tsx":"64","/home/jonganebski/github/polartypes-frontend/src/components/Map/partials/Step-route.tsx":"65","/home/jonganebski/github/polartypes-frontend/src/components/Loading.tsx":"66","/home/jonganebski/github/polartypes-frontend/src/components/User-intro.tsx":"67","/home/jonganebski/github/polartypes-frontend/src/components/Trips-list.tsx":"68","/home/jonganebski/github/polartypes-frontend/src/components/Tab-buttons.tsx":"69","/home/jonganebski/github/polartypes-frontend/src/components/Headers/StepsHeader.tsx":"70","/home/jonganebski/github/polartypes-frontend/src/components/Trip-intro.tsx":"71","/home/jonganebski/github/polartypes-frontend/src/components/TimeStamp.tsx":"72","/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useListFollowings.tsx":"73","/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useListFollowers.tsx":"74","/home/jonganebski/github/polartypes-frontend/src/__generated__/globalTypes.ts":"75","/home/jonganebski/github/polartypes-frontend/src/apollo/apollo.ts":"76","/home/jonganebski/github/polartypes-frontend/src/apollo/reactive-variables.ts":"77","/home/jonganebski/github/polartypes-frontend/src/apollo/type-policies.ts":"78","/home/jonganebski/github/polartypes-frontend/src/apollo/field-policies.ts":"79","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useCreateTrip.tsx":"80","/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useListComments.tsx":"81","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useCreateComment.tsx":"82"},{"size":904,"mtime":1615793257530,"results":"83","hashOfConfig":"84"},{"size":425,"mtime":1608450751420,"results":"85","hashOfConfig":"84"},{"size":132,"mtime":1608710051560,"results":"86","hashOfConfig":"84"},{"size":996,"mtime":1615811168390,"results":"87","hashOfConfig":"84"},{"size":4736,"mtime":1610327922910,"results":"88","hashOfConfig":"84"},{"size":195,"mtime":1608536237160,"results":"89","hashOfConfig":"84"},{"size":2139,"mtime":1609334355160,"results":"90","hashOfConfig":"84"},{"size":769,"mtime":1615815578290,"results":"91","hashOfConfig":"84"},{"size":520,"mtime":1610322739590,"results":"92","hashOfConfig":"84"},{"size":4669,"mtime":1615816192500,"results":"93","hashOfConfig":"84"},{"size":1289,"mtime":1610020164740,"results":"94","hashOfConfig":"84"},{"size":483,"mtime":1610329549290,"results":"95","hashOfConfig":"84"},{"size":1153,"mtime":1610263447120,"results":"96","hashOfConfig":"84"},{"size":8079,"mtime":1615904287540,"results":"97","hashOfConfig":"84"},{"size":1010,"mtime":1615797876240,"results":"98","hashOfConfig":"84"},{"size":2701,"mtime":1615901531830,"results":"99","hashOfConfig":"84"},{"size":4170,"mtime":1615793366350,"results":"100","hashOfConfig":"84"},{"size":5083,"mtime":1615793375220,"results":"101","hashOfConfig":"84"},{"size":4171,"mtime":1615793248250,"results":"102","hashOfConfig":"84"},{"size":3197,"mtime":1609847260310,"results":"103","hashOfConfig":"84"},{"size":5829,"mtime":1615904115550,"results":"104","hashOfConfig":"84"},{"size":1186,"mtime":1608808312077,"results":"105","hashOfConfig":"84"},{"size":5031,"mtime":1615798708710,"results":"106","hashOfConfig":"84"},{"size":346,"mtime":1608808547467,"results":"107","hashOfConfig":"84"},{"size":591,"mtime":1608808437185,"results":"108","hashOfConfig":"84"},{"size":4893,"mtime":1609671400130,"results":"109","hashOfConfig":"84"},{"size":2888,"mtime":1609645106620,"results":"110","hashOfConfig":"84"},{"size":2554,"mtime":1615810717270,"results":"111","hashOfConfig":"84"},{"size":5526,"mtime":1609112071790,"results":"112","hashOfConfig":"84"},{"size":3948,"mtime":1615880568000,"results":"113","hashOfConfig":"84"},{"size":1692,"mtime":1609112069650,"results":"114","hashOfConfig":"84"},{"size":19394,"mtime":1610249191180,"results":"115","hashOfConfig":"84"},{"size":626,"mtime":1609676019110,"results":"116","hashOfConfig":"84"},{"size":2720,"mtime":1615904200550,"results":"117","hashOfConfig":"84"},{"size":4871,"mtime":1615764444710,"results":"118","hashOfConfig":"84"},{"size":1698,"mtime":1609847370230,"results":"119","hashOfConfig":"84"},{"size":2356,"mtime":1615902947030,"results":"120","hashOfConfig":"84"},{"size":4122,"mtime":1615793454690,"results":"121","hashOfConfig":"84"},{"size":6245,"mtime":1615730962430,"results":"122","hashOfConfig":"84"},{"size":4669,"mtime":1609677481170,"results":"123","hashOfConfig":"84"},{"size":5914,"mtime":1615793406300,"results":"124","hashOfConfig":"84"},{"size":1724,"mtime":1615902830540,"results":"125","hashOfConfig":"84"},{"size":3305,"mtime":1609670887020,"results":"126","hashOfConfig":"84"},{"size":2849,"mtime":1609671672420,"results":"127","hashOfConfig":"84"},{"size":1469,"mtime":1615814557650,"results":"128","hashOfConfig":"84"},{"size":1050,"mtime":1615811186740,"results":"129","hashOfConfig":"84"},{"size":1258,"mtime":1615811181850,"results":"130","hashOfConfig":"84"},{"size":769,"mtime":1615902932040,"results":"131","hashOfConfig":"84"},{"size":738,"mtime":1615810922580,"results":"132","hashOfConfig":"84"},{"size":992,"mtime":1615902923960,"results":"133","hashOfConfig":"84"},{"size":3793,"mtime":1615903035300,"results":"134","hashOfConfig":"84"},{"size":1406,"mtime":1615793236170,"results":"135","hashOfConfig":"84"},{"size":1840,"mtime":1615814185040,"results":"136","hashOfConfig":"84"},{"size":1833,"mtime":1615811079730,"results":"137","hashOfConfig":"84"},{"size":15072,"mtime":1615816160340,"results":"138","hashOfConfig":"84"},{"size":1029,"mtime":1615810996370,"results":"139","hashOfConfig":"84"},{"size":2491,"mtime":1615903801290,"results":"140","hashOfConfig":"84"},{"size":1547,"mtime":1615764337710,"results":"141","hashOfConfig":"84"},{"size":2056,"mtime":1615810943690,"results":"142","hashOfConfig":"84"},{"size":952,"mtime":1615730196720,"results":"143","hashOfConfig":"84"},{"size":4381,"mtime":1615902956610,"results":"144","hashOfConfig":"84"},{"size":3568,"mtime":1615730892790,"results":"145","hashOfConfig":"84"},{"size":3680,"mtime":1615795707050,"results":"146","hashOfConfig":"84"},{"size":2388,"mtime":1610321704230,"results":"147","hashOfConfig":"84"},{"size":588,"mtime":1610270553080,"results":"148","hashOfConfig":"84"},{"size":477,"mtime":1610323096830,"results":"149","hashOfConfig":"84"},{"size":3480,"mtime":1615798450540,"results":"150","hashOfConfig":"84"},{"size":1586,"mtime":1615798486510,"results":"151","hashOfConfig":"84"},{"size":784,"mtime":1610324725780,"results":"152","hashOfConfig":"84"},{"size":3315,"mtime":1615901562840,"results":"153","hashOfConfig":"84"},{"size":1486,"mtime":1610325797730,"results":"154","hashOfConfig":"84"},{"size":978,"mtime":1615901555830,"results":"155","hashOfConfig":"84"},{"size":684,"mtime":1615792801220,"results":"156","hashOfConfig":"84"},{"size":672,"mtime":1615779037950,"results":"157","hashOfConfig":"84"},{"size":4522,"mtime":1615902836780,"results":"158","hashOfConfig":"84"},{"size":1281,"mtime":1615812393960,"results":"159","hashOfConfig":"84"},{"size":224,"mtime":1615793339320,"results":"160","hashOfConfig":"84"},{"size":791,"mtime":1615812356060,"results":"161","hashOfConfig":"84"},{"size":630,"mtime":1615810080950,"results":"162","hashOfConfig":"84"},{"size":1034,"mtime":1615796978990,"results":"163","hashOfConfig":"84"},{"size":922,"mtime":1615808585400,"results":"164","hashOfConfig":"84"},{"size":2001,"mtime":1615810684810,"results":"165","hashOfConfig":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"1uzk8ha",{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"168"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"168"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"168"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"168"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"/home/jonganebski/github/polartypes-frontend/src/index.tsx",[],["335","336"],"/home/jonganebski/github/polartypes-frontend/src/reportWebVitals.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/App.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/router/router.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/pages/Home.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Form-error.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Button.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/constants.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/Loading-spinner.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/pages/Trips.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Logo.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Avatar.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useGeocoder.ts",[],"/home/jonganebski/github/polartypes-frontend/src/pages/Trip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Button-add-step.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/helpers.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Signin.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Signup.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Set-time-zone.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Cards/Trip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Cards/Step.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Headers/HomeHeader.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Headers/CommonHeader.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Background.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/CloseIcon.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Calendar.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Clock.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Cards/partials/Comments.tsx",["337"],"import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useCreateComment } from '../../../hooks/useMutation/useCreateComment';\nimport { useListComments } from '../../../hooks/useQuery/useListComments';\nimport { readTripQuery_readTrip_trip_steps } from '../../../__generated__/readTripQuery';\nimport { whoAmIQuery } from '../../../__generated__/whoAmIQuery';\nimport { Avatar } from '../../Avatar';\nimport { Comment } from './Comment';\n\ninterface ICommentProps {\n  userData: whoAmIQuery | undefined;\n  step: readTripQuery_readTrip_trip_steps;\n}\n\nexport const Comments: React.FC<ICommentProps> = ({ userData, step }) => {\n  const { register, getValues, handleSubmit, reset } = useForm<{\n    text: string;\n  }>();\n\n  const [createCommentMutation, { loading }] = useCreateComment(\n    getValues().text,\n    step.id,\n    userData,\n  );\n\n  const { data, loading: queryLoading, fetchMore } = useListComments(step.id);\n\n  const onSubmit = async () => {\n    if (!loading) {\n      const { text } = getValues();\n      await createCommentMutation({\n        variables: { input: { text, stepId: step.id } },\n      });\n      reset();\n    }\n  };\n\n  const onClickLoadMore = () => {\n    if (fetchMore && data?.listComments.hasMorePages) {\n      fetchMore({\n        variables: {\n          input: { stepId: step.id, cursorId: data?.listComments.endCursorId },\n        },\n      });\n    }\n  };\n\n  return (\n    <div className=\"py-4 border-t border-myGray-light\">\n      {userData && (\n        <form\n          className=\"flex items-center mb-4\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <Avatar avatarUrl={userData.whoAmI.avatarUrl} size={8} />\n          <input\n            ref={register({ required: true })}\n            placeholder=\"Write a comment...\"\n            className=\"input ml-3 w-full\"\n            autoComplete=\"off\"\n            type=\"text\"\n            name=\"text\"\n          />\n        </form>\n      )}\n      <ul className=\"py-4 grid gap-y-4\">\n        {data?.listComments.step?.comments?.map((comment, i) => (\n          <Comment\n            key={i}\n            userData={userData}\n            comment={comment}\n            stepId={step.id}\n          />\n        ))}\n      </ul>\n      {data?.listComments.hasMorePages && (\n        <div className=\"text-center\">\n          <span\n            className=\"text-sm underline text-myBlue cursor-pointer hover:text-myBlue-light active:text-myBlue-dark\"\n            onClick={onClickLoadMore}\n          >\n            Load more\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n","/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/FilesArea.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useDragNDrop-file.ts",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useDragNDrop-image.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Save-step.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/partials/Day.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Cards/partials/Comment.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Map/Map.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/context.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Trip-status.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Options.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Settings.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Profile.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/partials/Account.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/fragments.ts",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useCalendar.ts",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/StepImages.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateTrip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useFollow.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUnfollow.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useTrips.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useWhoAmI.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useTrip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useCreateStep.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useDeleteStep.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateStep.tsx",["338","339"],"import { ApolloCache, FetchResult, gql, useMutation } from '@apollo/client';\nimport { UseFormMethods } from 'react-hook-form';\nimport { client } from '../../apollo/apollo';\nimport { TImage } from '../../components/Modals/Save-step';\nimport { UPDATED_STEP_FRAGMENT } from '../../fragments';\nimport { ICreateStepFormProps } from '../../pages/Trip';\nimport { readTripQuery_readTrip_trip_steps } from '../../__generated__/readTripQuery';\nimport {\n  updateStepMutation,\n  updateStepMutationVariables,\n} from '../../__generated__/updateStepMutation';\n\nconst UPDATE_STEP_MUTATION = gql`\n  mutation updateStepMutation($input: UpdateStepInput!) {\n    updateStep(input: $input) {\n      ok\n      error\n    }\n  }\n`;\n\nexport const useUpdateStep = (\n  f: UseFormMethods<ICreateStepFormProps>,\n  editingStep: readTripQuery_readTrip_trip_steps | null,\n  images: TImage[],\n  setIsCreateStepModal: (value: React.SetStateAction<boolean>) => void,\n) => {\n  const update = (\n    cache: ApolloCache<updateStepMutation>,\n    { data }: FetchResult<updateStepMutation>,\n  ) => {\n    if (!data || !editingStep) return;\n\n    const {\n      updateStep: { error, ok },\n    } = data;\n    if (!ok) {\n      console.log(error);\n      return;\n    }\n    const { lat, lon, ...values } = f.getValues();\n\n    const success = cache.modify({\n      id: `Step:${editingStep.id}`,\n      fields: {\n        lat: () => +lat,\n        lon: () => +lon,\n        location: () => values.location,\n        name: () => values.name,\n        country: () => values.country,\n        story: () => values.story,\n        arrivedAt: () => values.arrivedAt,\n        timeZone: () => values.timeZone,\n      },\n    });\n\n    if (!success) return;\n\n    setIsCreateStepModal(false);\n  };\n\n  return useMutation<updateStepMutation, updateStepMutationVariables>(\n    UPDATE_STEP_MUTATION,\n    { update },\n  );\n};\n","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useUpdateAccount.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Save-trip.tsx",["340"],"import { faCalendarAlt, faTrashAlt } from '@fortawesome/free-regular-svg-icons';\nimport {\n  faGlobe,\n  faLock,\n  faUserFriends,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport moment from 'moment-timezone';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { DEFAULT_TRIP_COVER } from '../../constants';\nimport { getBackgroundImage } from '../../helpers';\nimport { useCreateTrip } from '../../hooks/useMutation/useCreateTrip';\nimport { useDeleteTrip } from '../../hooks/useMutation/useDeleteTrip';\nimport { useUpdateTrip } from '../../hooks/useMutation/useUpdateTrip';\nimport { Availability } from '../../__generated__/globalTypes';\nimport { readTripQuery_readTrip_trip } from '../../__generated__/readTripQuery';\nimport { readTripsQuery_readTrips_targetUser_trips } from '../../__generated__/readTripsQuery';\nimport { whoAmIQuery } from '../../__generated__/whoAmIQuery';\nimport { Button } from '../Button';\nimport { FormError } from '../Form-error';\nimport { NewCalendar } from '../Tooltips/Calendar';\nimport { ModalBackground } from './partials/Background';\nimport { ModalCloseIcon } from './partials/CloseIcon';\nimport { StepImages } from './StepImages';\n\ninterface ICreateTripModal {\n  userData: whoAmIQuery;\n  setIsSaveTripModal: React.Dispatch<React.SetStateAction<boolean>>;\n  editingTrip?: readTripQuery_readTrip_trip | null;\n  trips?: readTripsQuery_readTrips_targetUser_trips[];\n}\n\nexport interface ISaveTripFormProps {\n  name: string;\n  summary: string;\n  startDate: string;\n  endDate: string;\n  availability: Availability;\n}\n\nexport const SaveTripModal: React.FC<ICreateTripModal> = ({\n  userData,\n  setIsSaveTripModal,\n  editingTrip = null,\n  trips = [],\n}) => {\n  const timeZone = userData.whoAmI.timeZone!;\n  const [isStartDateCalendar, setIsStartDateCalendar] = useState<\n    boolean | null\n  >(null);\n  const [isSelectCoverModal, setIsSelectCoverModal] = useState(false);\n  const [coverUrl, setCoverUrl] = useState(\n    editingTrip ? getBackgroundImage(editingTrip) : '',\n  );\n  const defaultValues: Partial<ISaveTripFormProps> = editingTrip\n    ? {\n        startDate: editingTrip.startDate,\n        endDate: editingTrip.endDate ?? '',\n        name: editingTrip.name,\n        summary: editingTrip.summary ?? '',\n        availability: editingTrip.availability,\n      }\n    : { startDate: moment().tz(timeZone).format(), endDate: '' };\n  const f = useForm<ISaveTripFormProps>({\n    mode: 'onChange',\n    defaultValues,\n  });\n  const { setError, clearErrors, getValues, setValue, register } = f;\n  const startDate = getValues('startDate');\n  const endDate = getValues('endDate');\n\n  const setEndDateAfterStartDate = useCallback(() => {\n    if (endDate) {\n      if (\n        moment.tz(startDate, timeZone).isAfter(moment.tz(endDate, timeZone))\n      ) {\n        setValue('endDate', startDate, { shouldValidate: true });\n      }\n    }\n  }, [endDate, setValue, startDate, timeZone]);\n\n  const validateTripDates = useCallback(() => {\n    let overlappedTrip: readTripsQuery_readTrips_targetUser_trips | undefined;\n    if (endDate) {\n      overlappedTrip = trips.find((otherTrip) => {\n        if (otherTrip.endDate) {\n          const isTripsOverlapped =\n            moment(startDate).isBetween(\n              moment(otherTrip.startDate),\n              moment(otherTrip.endDate),\n              'days',\n              '[]',\n            ) ||\n            moment(endDate).isBetween(\n              moment(otherTrip.startDate),\n              moment(otherTrip.endDate),\n              'days',\n              '[]',\n            ) ||\n            moment(otherTrip.startDate).isBetween(\n              moment(startDate),\n              moment(endDate),\n              'days',\n              '[]',\n            ) ||\n            moment(otherTrip.endDate).isBetween(\n              moment(startDate),\n              moment(endDate),\n              'days',\n              '[]',\n            );\n          return isTripsOverlapped;\n        } else {\n          const isTripsOverlapped = moment(endDate).isSameOrAfter(\n            moment(otherTrip.startDate),\n            'days',\n          );\n          return isTripsOverlapped;\n        }\n      });\n    } else {\n      overlappedTrip = trips.find((otherTrip) => {\n        if (otherTrip.endDate) {\n          const isTripsOverlapped =\n            moment(otherTrip.startDate).isSameOrAfter(\n              moment(startDate),\n              'days',\n            ) ||\n            moment(otherTrip.endDate).isSameOrAfter(moment(startDate), 'days');\n          return isTripsOverlapped;\n        } else {\n          return true;\n        }\n      });\n    }\n    overlappedTrip\n      ? setError('startDate', {\n          message: `This trip overlaps with \"${overlappedTrip.name}\". Select a different date.`,\n        })\n      : clearErrors('startDate');\n  }, [clearErrors, endDate, setError, startDate, trips]);\n\n  useEffect(() => {\n    setEndDateAfterStartDate();\n    validateTripDates();\n  }, [setEndDateAfterStartDate, validateTripDates]);\n\n  const [createTripMutation, { loading: createLoading }] = useCreateTrip(\n    userData.whoAmI.username,\n  );\n\n  const [updateTripMutation, { loading: updateLoading, error }] = useUpdateTrip(\n    f,\n    editingTrip,\n    coverUrl,\n  );\n  const [deleteTripMutation] = useDeleteTrip(editingTrip?.id);\n\n  const onSubmit = async () => {\n    const { endDate, ...values } = getValues();\n    if (editingTrip) {\n      await updateTripMutation({\n        variables: {\n          input: {\n            ...values,\n            ...(coverUrl !== DEFAULT_TRIP_COVER && { coverUrl }),\n            endDate: endDate ? endDate : null,\n            tripId: editingTrip.id,\n          },\n        },\n      });\n      setIsSaveTripModal(false);\n    } else {\n      await createTripMutation({\n        variables: { input: { ...values, endDate: endDate ? endDate : null } },\n      });\n    }\n  };\n\n  const getEndateValue = () => {\n    const dateFormat = moment\n      .tz(f.watch('endDate'), timeZone)\n      .format('DD MMMM YYYY');\n    if (!dateFormat || dateFormat === 'Invalid date') {\n      return \"I don't know\";\n    }\n    return dateFormat;\n  };\n  return (\n    <FormProvider {...f}>\n      <ModalBackground onClick={() => setIsSaveTripModal(false)} />\n      <div className=\"modal overflow-hidden\">\n        <ModalCloseIcon onClick={() => setIsSaveTripModal(false)} />\n        <div className=\"py-6 text-center text-2xl text-myGreen-darkest font-semibold border-b\">\n          {editingTrip ? 'Edit trip' : 'New trip'}\n        </div>\n        <form\n          onSubmit={f.handleSubmit(onSubmit)}\n          className=\"relative grid gap-y-5 max-h-screen80 overflow-y-scroll\"\n        >\n          <div className=\"p-6 text-xl text-myGreen-darkest font-semibold border-b bg-myGray-lightest\">\n            Trip details\n          </div>\n          {editingTrip && (\n            <div className=\"px-6 flex items-center\">\n              <div\n                className=\"mr-8 w-28 h-28 rounded-lg bg-cover bg-center shadow-xl\"\n                style={{\n                  backgroundImage: `url(${coverUrl})`,\n                }}\n              ></div>\n              <Button\n                text=\"Change cover photo\"\n                isSubmitBtn={false}\n                size=\"sm\"\n                type=\"blue-regular\"\n                onClick={() => setIsSelectCoverModal(true)}\n              />\n            </div>\n          )}\n          <div className=\"grid gap-y-1 px-6\">\n            <h6 className=\"font-semibold text-myGreen-darkest\">Trip name</h6>\n            <input\n              ref={register({ required: 'Please enter a name for the trip' })}\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"e.g. South American Trip\"\n              className=\"input\"\n            />\n            {f.errors.name?.message && (\n              <FormError err={f.errors.name.message} />\n            )}\n          </div>\n          <div className=\"grid gap-y-1 px-6\">\n            <h6 className=\"font-semibold text-myGreen-darkest\">Trip summary</h6>\n            <textarea\n              ref={register({ maxLength: 80 })}\n              name=\"summary\"\n              maxLength={80}\n              placeholder=\"e.g. An awesome roadtrip through the deserts of Africa with my best friends\"\n              className=\"input resize-none h-32\"\n            />\n          </div>\n          <div>\n            <div className=\"p-6 text-xl text-myGreen-darkest font-semibold border-t border-b bg-myGray-lightest\">\n              When?\n            </div>\n          </div>\n          <div className=\"grid gap-y-1 px-6\">\n            <h6 className=\"font-semibold text-myGreen-darkest\">Start date</h6>\n            <div className=\"relative\">\n              <input\n                ref={register({ required: true })}\n                name=\"startDate\"\n                readOnly\n                type=\"text\"\n                className=\"hidden\"\n              />\n              <div\n                className=\"input w-full bg-white cursor-pointer\"\n                onClick={() =>\n                  setIsStartDateCalendar((prev) => (prev ? null : true))\n                }\n              >\n                {moment\n                  .tz(f.watch('startDate'), timeZone)\n                  .format('DD MMMM YYYY')}\n              </div>\n              <FontAwesomeIcon\n                icon={faCalendarAlt}\n                className=\"absolute top-1/2 right-5 transform -translate-y-1/2 text-myBlue text-lg\"\n              />\n              {isStartDateCalendar && (\n                <NewCalendar\n                  name=\"startDate\"\n                  selectedDate={f.getValues('startDate')}\n                  timeZone={timeZone}\n                />\n              )}\n            </div>\n          </div>\n          <div className=\"grid gap-y-1 px-6\">\n            <h6 className=\"font-semibold text-myGreen-darkest\">End date</h6>\n            <div className=\"relative\">\n              <input\n                ref={register()}\n                name=\"endDate\"\n                readOnly\n                type=\"text\"\n                className=\"hidden\"\n              />\n              <div\n                className=\"input w-full bg-white cursor-pointer\"\n                onClick={() =>\n                  setIsStartDateCalendar((prev) =>\n                    prev === false ? null : false,\n                  )\n                }\n              >\n                {getEndateValue()}\n              </div>\n              <FontAwesomeIcon\n                icon={faCalendarAlt}\n                className=\"absolute top-1/2 right-5 transform -translate-y-1/2 text-myBlue text-lg\"\n              />\n              {isStartDateCalendar === false && (\n                <NewCalendar\n                  name=\"endDate\"\n                  nullable={true}\n                  selectedDate={f.getValues('endDate')}\n                  timeZone={timeZone}\n                />\n              )}\n            </div>\n          </div>\n          <div className=\"px-6 grid\">\n            {f.errors.startDate?.message && (\n              <FormError err={f.errors.startDate.message} />\n            )}\n          </div>\n          <div className=\"p-6 text-xl text-myGreen-darkest font-semibold border-t border-b bg-myGray-lightest\">\n            Who can see my trip?\n          </div>\n          <div className=\"grid\">\n            <label className=\"px-6 pb-6 flex items-center border-b border-myGray-light cursor-pointer\">\n              <input\n                ref={register({ required: true })}\n                name=\"availability\"\n                value={Availability.Private}\n                type=\"radio\"\n                className=\"mr-6 w-6 h-6\"\n              />\n              <div>\n                <h6 className=\"mb-1 font-medium text-myGreen-darkest\">\n                  <FontAwesomeIcon icon={faLock} /> Only me\n                </h6>\n                <p className=\"text-myGray-dark text-xs\">\n                  This trip, including all details like your current location,\n                  is only visible to you.\n                </p>\n              </div>\n            </label>\n            <label className=\"p-6 flex items-center cursor-pointer\">\n              <input\n                ref={register({ required: true })}\n                name=\"availability\"\n                value={Availability.Followers}\n                type=\"radio\"\n                className=\"mr-6 w-6 h-6\"\n              />\n              <div>\n                <h6 className=\"mb-1 font-medium text-myGreen-darkest\">\n                  <FontAwesomeIcon icon={faUserFriends} /> My followers\n                </h6>\n                <p className=\"text-myGray-dark text-xs\">\n                  This trip, including all details like your current location,\n                  is only visible to you.\n                </p>\n              </div>\n            </label>\n            <label className=\"p-6 flex items-center border-t border-myGray-light cursor-pointer\">\n              <input\n                ref={register({ required: true })}\n                name=\"availability\"\n                value={Availability.Public}\n                type=\"radio\"\n                className=\"mr-6 w-6 h-6\"\n              />\n              <div>\n                <h6 className=\"mb-1 font-medium text-myGreen-darkest\">\n                  <FontAwesomeIcon icon={faGlobe} /> Public\n                </h6>\n                <p className=\"text-myGray-dark text-xs\">\n                  This trip, including all details like your current location,\n                  is only visible to you.\n                </p>\n              </div>\n            </label>\n          </div>\n          <div\n            className={`p-6 ${\n              editingTrip ? 'flex justify-between' : 'grid'\n            } bg-myGray-lightest border-t border-myGray-light rounded-bl-2xl`}\n          >\n            <Button\n              text={editingTrip ? 'Save changes' : 'Create trip'}\n              disabled={!f.formState.isValid}\n              loading={createLoading || updateLoading}\n              type=\"red-solid\"\n            />\n            {editingTrip && (\n              <Button\n                text=\"\"\n                type=\"white-solid\"\n                icon={<FontAwesomeIcon icon={faTrashAlt} className=\"text-lg\" />}\n                fontColorClass=\"text-myRed\"\n                isSubmitBtn={false}\n                onClick={() => {\n                  const isConfirmed = window.confirm(\n                    'This trip will be removed permanently. Are you sure?',\n                  );\n                  if (isConfirmed) {\n                    deleteTripMutation({\n                      variables: { input: { tripId: editingTrip.id } },\n                    });\n                  }\n                }}\n              />\n            )}\n          </div>\n        </form>\n      </div>\n      {editingTrip && (\n        <StepImages\n          coverUrl={coverUrl}\n          setCoverUrl={setCoverUrl}\n          steps={editingTrip.steps}\n          isSelectCoverModal={isSelectCoverModal}\n          setIsSelectCoverModal={setIsSelectCoverModal}\n        />\n      )}\n    </FormProvider>\n  );\n};\n","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useDeleteTrip.tsx",["341"],"import { gql, useMutation } from '@apollo/client';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { client } from '../../apollo/apollo';\nimport {\n  deleteTripMutation,\n  deleteTripMutationVariables,\n} from '../../__generated__/deleteTripMutation';\nimport { useWhoAmI } from '../useQuery/useWhoAmI';\n\nconst DELETE_TRIP_MUTATION = gql`\n  mutation deleteTripMutation($input: DeleteTripInput!) {\n    deleteTrip(input: $input) {\n      ok\n      error\n    }\n  }\n`;\n\nexport const useDeleteTrip = (tripId?: number) => {\n  const { data: userData } = useWhoAmI();\n  const history = useHistory();\n\n  const onCompleted = (data: deleteTripMutation) => {\n    const {\n      deleteTrip: { ok, error },\n    } = data;\n    if (ok && !error && userData && tripId) {\n      client.cache.evict({ id: `Trip:${tripId}` });\n      history.push(`/${userData.whoAmI.username}`);\n    }\n  };\n\n  return useMutation<deleteTripMutation, deleteTripMutationVariables>(\n    DELETE_TRIP_MUTATION,\n    { onCompleted },\n  );\n};\n","/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useToggleLike.tsx",["342"],"/home/jonganebski/github/polartypes-frontend/src/components/Map/partials/Trip-route.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Box/User.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Box/Trip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Statistics.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Tooltips/Search-result.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Modals/Follow-following.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Map/partials/Step-markers.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Map/partials/Step-route.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Loading.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/User-intro.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Trips-list.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Tab-buttons.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Headers/StepsHeader.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/Trip-intro.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/components/TimeStamp.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useListFollowings.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useListFollowers.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/__generated__/globalTypes.ts",[],"/home/jonganebski/github/polartypes-frontend/src/apollo/apollo.ts",[],"/home/jonganebski/github/polartypes-frontend/src/apollo/reactive-variables.ts",[],"/home/jonganebski/github/polartypes-frontend/src/apollo/type-policies.ts",[],"/home/jonganebski/github/polartypes-frontend/src/apollo/field-policies.ts",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useCreateTrip.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useQuery/useListComments.tsx",[],"/home/jonganebski/github/polartypes-frontend/src/hooks/useMutation/useCreateComment.tsx",[],{"ruleId":"343","replacedBy":"344"},{"ruleId":"345","replacedBy":"346"},{"ruleId":"347","severity":1,"message":"348","line":26,"column":26,"nodeType":"349","messageId":"350","endLine":26,"endColumn":38},{"ruleId":"347","severity":1,"message":"351","line":3,"column":10,"nodeType":"349","messageId":"350","endLine":3,"endColumn":16},{"ruleId":"347","severity":1,"message":"352","line":5,"column":10,"nodeType":"349","messageId":"350","endLine":5,"endColumn":31},{"ruleId":"347","severity":1,"message":"353","line":153,"column":56,"nodeType":"349","messageId":"350","endLine":153,"endColumn":61},{"ruleId":"347","severity":1,"message":"354","line":2,"column":10,"nodeType":"349","messageId":"350","endLine":2,"endColumn":19},{"ruleId":"347","severity":1,"message":"355","line":1,"column":15,"nodeType":"349","messageId":"350","endLine":1,"endColumn":24},"no-native-reassign",["356"],"no-negated-in-lhs",["357"],"@typescript-eslint/no-unused-vars","'queryLoading' is assigned a value but never used.","Identifier","unusedVar","'client' is defined but never used.","'UPDATED_STEP_FRAGMENT' is defined but never used.","'error' is assigned a value but never used.","'useEffect' is defined but never used.","'Reference' is defined but never used.","no-global-assign","no-unsafe-negation"]